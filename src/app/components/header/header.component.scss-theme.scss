@use "sass:map";
@use "@angular/material" as mat;

@mixin app-header-component-theme($theme) {
  // $primary: mat.get-theme-color($theme, primary);

  /**
    *

background, error, error-container, inverse-on-surface, inverse-primary, inverse-surface, on-background, on-error, on-error-container, on-primary, on-primary-container, on-primary-fixed, on-primary-fixed-variant, on-secondary, on-secondary-container, on-secondary-fixed, on-secondary-fixed-variant, on-surface, on-surface-variant, on-tertiary, on-tertiary-container, on-tertiary-fixed, on-tertiary-fixed-variant, outline, outline-variant, primary, primary-container, primary-fixed, primary-fixed-dim, scrim, secondary, secondary-container, secondary-fixed, secondary-fixed-dim, shadow, surface, surface-bright, surface-container, surface-container-high, surface-container-highest, surface-container-low, surface-container-lowest, surface-dim, surface-tint, surface-variant, tertiary, tertiary-container, tertiary-fixed, tertiary-fixed-dim

    */

  $primary: mat.get-theme-color($theme, surface);

  app-header {
    //
    // Never forget the following points!!!
    //
    // 1. We have multiple class names here because you need to be at least as specific
    // as the existing css rule provided by _theming.scss in order to override it!!!
    //
    // 2. Because we are darkening the background here with the primary variant,
    // we also need the `color="primary"` directive on the mat-toolbar tag
    // in order that ALL children inherit the appropriate color for displaying fonts, etc.
    //
    // mat-toolbar.main-mat-toolbar.mat-toolbar {
    mat-toolbar.main-mat-toolbar {
      // background: mat-color($primary, darker);
      // background: green;
      // background: $primary;
      // background: black;

      .link {
        // color: mat-color($primary, default-contrast);
      }
    }
  }
}
