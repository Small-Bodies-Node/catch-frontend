{"version":3,"file":"sbnsolarsystemviewer.cjs.production.min.js","sources":["../src/threejs/utils/ascii-error.ts","../src/threejs/utils/conversions.ts","../src/threejs/utils/simple-uuid.ts","../src/threejs/utils/clean-local-storage.ts","../src/threejs/html/add-loader-div.ts","../src/threejs/utils/myprint.ts","../src/threejs/abstract-scene/abstract-scene-manager.ts","../src/threejs/html/set-loader-div-visbility.ts","../src/threejs/utils/get-texture-from-image-url.ts","../src/threejs/data/basic-solar-system-data.ts","../src/options.ts","../src/threejs/utils/get-all-options.ts","../src/threejs/abstract-scene/abstract-scene-entity.ts","../src/threejs/abstract-scene/abstract-toy-model.ts","../src/threejs/utils/constants.ts","../src/threejs/models/EOrbitalType.ts","../src/threejs/scene-entities/sun.ts","../src/threejs/utils/gltf-loader.ts","../src/threejs/utils/resize-threejs-object.ts","../src/threejs/utils/center-on-bounding-box.ts","../src/threejs/utils/enshadow-children.ts","../src/threejs/utils/get-logged-position.ts","../src/threejs/utils/planetoid-positions-all.ts","../src/threejs/utils/myorbit.ts","../src/threejs/utils/get-local-orbit-data.ts","../src/threejs/scene-entities/planet.ts","../src/threejs/utils/create-earth-cloud-mesh.ts","../src/threejs/utils/get-planet-radius-meters.ts","../src/threejs/scene-entities/misc-helpers.ts","../src/threejs/scene-entities/simple-light.ts","../src/threejs/utils/create-asteroid-geometry.ts","../src/threejs/scene-entities/asteroid.ts","../src/threejs/scene-entities/point-light.ts","../src/threejs/scene-entities/birds-eye.ts","../src/threejs/utils/get-destination-look-position.ts","../src/threejs/utils/set-options.ts","../src/threejs/html/create-three-column-container.ts","../src/threejs/html/create-titled-switch.ts","../src/threejs/html/create-titled-input.ts","../src/threejs/html/create-hr-div.ts","../src/threejs/html/create-settings-panel.ts","../src/index.ts","../src/threejs/scene-manager.ts","../src/threejs/utils/update-traversal-fraction.ts","../src/threejs/utils/threejs-geometry-functions.ts","../src/threejs/utils/update-camera-position.ts","../src/threejs/utils/get-destination-camera-position.ts","../src/threejs/utils/update-camera-viewing-angle.ts","../src/threejs/html/create-search-field.ts","../src/threejs/html/create-display-message-div.ts","../src/threejs/html/create-html-button-row.ts","../src/threejs/html/inject-common-button-properties.ts","../src/threejs/html/create-settings-button.ts","../src/threejs/html/create-google-icon.ts","../src/threejs/css/add-google-font.ts","../src/threejs/css/add-global-styles.ts","../src/threejs/utils/add-global-properties.ts"],"sourcesContent":["/**\n * A simple ascii-art wrapper for error messaging in order to convey\n * just how tragic your errors are\n */\nexport function asciiError(msg: string) {\n  // console.clear();\n  return `\n\n   ______________________________    . \\\\  | / .\n  /                            / \\\\     \\\\ \\\\ / /\n |                            | ==========  - -\n  \\\\____________________________\\\\_/     / / \\\\ \\\\\n  ______________________________      \\\\  | / | \\\\\n /                            / \\\\     \\\\ \\\\ / /.   .\n|                            | ==========  - -\n \\\\____________________________\\\\_/     / / \\\\ \\\\    /\n   ______________________________   / |\\\\  | /  .\n  /                            / \\\\     \\\\ \\\\ / /\n |                            | ==========  -  - -\n  \\\\____________________________\\\\_/     / / \\\\ \\\\\n                                     .  / | \\\\  .\n\n  Are you trying to wreak havoc on the Universe!?!\n\n  ${msg}\n\n  Idiot.\n\n  `;\n}\n","export function mToAu(meters: number) {\n  // Source: https://en.wikipedia.org/wiki/Astronomical_unit\n  return meters / 149597870700;\n}\n\nexport function auToMeters(aus: number) {\n  return 149597870700 * aus;\n}\n\nexport function dateToCenturiesSinceJ2000(date: Date) {\n  if (true) {\n    //\n    const xxx = date.toLocaleDateString('en-ZA');\n    // const julianDate = JulianUtils.getJulianDate(xxx);\n    // const yyy = JulianUtils.getCenturiesSinceJ2000(julianDate);\n\n    // console.log('julianDate', xxx, yyy);\n\n    // return yyy;\n  } else {\n    //\n    return 0;\n  }\n}\n","let count = 0;\n\nexport const simpleUuid = () => {\n  count++;\n  return 'sbn-solar-system-viewer-' + count;\n};\n","import { defaultOptions, IOptions } from '../../options';\n\n/**\n * Remove any keys that are not members of optionKeys\n * If a value does not exist for any member of optionKeys\n * then set that value to the default\n *\n */\nexport const cleanLocalStorage = () => {\n  // --->>\n\n  const optionKeys = Object.keys(defaultOptions);\n\n  // Remove key-value pairs where the key is not in optionKeys\n  const items = { ...localStorage };\n\n  Object.keys(items).forEach(key => {\n    if (!optionKeys.includes(key as any)) localStorage.removeItem(key);\n  });\n\n  // Make sure every key has at least a default value\n  optionKeys.forEach(key => {\n    const val = localStorage.getItem(key);\n    if (!val) {\n      localStorage.setItem(\n        key,\n        JSON.stringify(defaultOptions[(key as any) as keyof IOptions])\n      );\n    } else {\n      try {\n        const parsedVal = JSON.parse(val);\n        if (\n          typeof parsedVal !==\n          typeof defaultOptions[(key as any) as keyof IOptions]\n        ) {\n          localStorage.setItem(\n            key,\n            JSON.stringify(defaultOptions[(key as any) as keyof IOptions])\n          );\n        }\n      } catch (err) {\n        console.log('Local-storage mishap');\n        return;\n      }\n    }\n  });\n};\n","import { simpleUuid } from '../utils/simple-uuid';\n\nexport const loaderDivId = 'loader-div-id-' + simpleUuid();\nconst borderWidthPxls = 5;\nconst spinSpeedMs = 2000;\n\nlet isInit = false;\n\n/**\n * Simple loader div; removed by `remove-loader-div`\n * It consists of two divs; the outer 'loaderDiv' that is just a shell\n * for centering the div with the actual animation, and the 'animDiv'\n * that does the spinning, etc.\n */\nexport const addLoaderDiv = (containerDiv: HTMLElement) => {\n  // --->>>\n\n  // Only add once\n  if (isInit) return;\n  isInit = true;\n\n  // Create divs\n  const loaderDiv = document.createElement('div');\n  const animDiv = document.createElement('div');\n  containerDiv.append(loaderDiv);\n  loaderDiv.append(animDiv);\n  // Style loaderDiv\n  loaderDiv.id = loaderDivId;\n  loaderDiv.style.setProperty('position', 'absolute');\n  loaderDiv.style.setProperty('top', '0px');\n  loaderDiv.style.setProperty('left', '0px');\n  loaderDiv.style.setProperty('bottom', '0px');\n  loaderDiv.style.setProperty('right', '0px');\n  loaderDiv.style.setProperty('display', 'flex');\n  loaderDiv.style.setProperty('align-items', 'center');\n  loaderDiv.style.setProperty('justify-content', 'center');\n  loaderDiv.style.setProperty('pointer-events', 'none');\n  // Calc size of radius based on size of container\n  const width = loaderDiv.offsetWidth;\n  const height = loaderDiv.offsetHeight;\n  const shorterLength = width < height ? width : height;\n  // Style animation div\n  animDiv.style.setProperty('width', shorterLength * 0.25 + 'px');\n  animDiv.style.setProperty('height', shorterLength * 0.25 + 'px');\n  animDiv.style.setProperty('border', `${borderWidthPxls}px solid #f3f3f3`);\n  animDiv.style.setProperty('border-top', `${borderWidthPxls}px solid #3498db`);\n  animDiv.style.setProperty('border-radius', '100px');\n  animDiv.style.setProperty(\n    'animation',\n    `sbn-solar-system-viewer-loader-spin ${spinSpeedMs}ms linear infinite`\n  );\n  return loaderDiv;\n};\n","import { getInitDate } from '../..';\n\n/**\n * Wrapper to console with time taken\n */\nexport const myprint = (...msg: any[]) => {\n  console.log(' >>> ', +new Date() - +getInitDate(), ' >>> ', ...msg);\n};\n","import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls';\nimport { ISceneEntity } from '../models/ISceneEntity';\nimport { asciiError } from '../utils/ascii-error';\nimport { auToMeters } from '../utils/conversions';\nimport { getInitDate, initDate, setInitDate } from '../../index';\nimport { addLoaderDiv } from '../html/add-loader-div';\n// import { removeLoaderDiv } from '../html/remove-loader-div';\nimport { daysPerCentury } from '../data/time-units';\nimport { myprint } from '../utils/myprint';\nimport { setLoaderDivVisibility } from '../html/set-loader-div-visbility';\n\n// Initial Camera Params\nconst ar = 2; // Aspect Ratio\nconst fov = 60; // Field of View\nconst near = auToMeters(0.00001); // Near Plane\nconst far = auToMeters(3000); // Far Plane\n\n/**\n * This abstract class is to be inherited by the SceneManager instance.\n * The idea is to place all the usual/boilerplate code for setting up\n * a threeJs scene and running it here, so that the only place you\n * need to implement the specifics of your scene is in your\n * SceneManager instance.\n *\n * By convention, properties/methods that are not intended/expected to be used\n * outside this class are prefixed with '_'\n *\n */\nexport abstract class AbstractSceneManager {\n  // --->>>\n\n  /* Do NOT init OR re-init _controls till scene is set up or they will be erratic */\n  protected _controls!: OrbitControls;\n  protected _scene = new THREE.Scene();\n  protected _renderer?: THREE.WebGLRenderer;\n  protected _canvas = document.createElement('canvas');\n  protected _requestAnimationFrameId: undefined | number;\n  protected _clock = new THREE.Clock(false);\n  protected _initialViewingVector = new THREE.Vector3();\n  protected _isSceneReady = false;\n  protected _isRendering = false;\n  protected _isHelpersShown = false;\n  protected _isInit = false;\n  protected _container!: HTMLElement;\n  protected _isLoaderVisible = true;\n  protected _fps = 60;\n  protected _camera = new THREE.PerspectiveCamera(fov, ar, near, far);\n  protected _sceneEntities: ISceneEntity[] = [];\n  protected _preInitHook: () => void = () => {};\n  protected _postInitHook: () => void = () => {};\n  protected _destroyHook: () => void = () => {};\n  protected updateCamera: () => void = () => {};\n\n  constructor(protected _containerId: string) {\n    // --->>\n\n    // Get container and add fitting canvas to it\n    this._container = document.getElementById(this._containerId)!;\n    if (!this._container) {\n      throw new Error('No container found with id: ' + this._containerId);\n    }\n\n    this._canvas.style.width = '100%';\n    this._canvas.style.height = '100%';\n    this._container.append(this._canvas);\n    this._container.style.setProperty('position', 'relative');\n    this._container.style.setProperty('font-family', '\"Odibee Sans\", cursive');\n    this._container.style.setProperty('background-color', 'black');\n    addLoaderDiv(this._container);\n  }\n\n  public async init() {\n    // ------>>>\n\n    // Init only once\n    if (!!this._isInit) return;\n    this._isInit = true;\n\n    // Time initialization\n    setInitDate(new Date());\n\n    // Enable superclass constructor to adjust settings prior to initialization sequence\n    this._preInitHook();\n\n    // React to resize events on window\n    window.addEventListener('resize', this._updateCameraAspect);\n\n    // Build Renderer\n    const DPR: number = window.devicePixelRatio ? window.devicePixelRatio : 1;\n    this._renderer = new THREE.WebGLRenderer({\n      canvas: this._canvas,\n      antialias: true,\n      alpha: true,\n    });\n    this._renderer.setPixelRatio(DPR);\n    this._renderer.sortObjects = false; // This prevents pesky rendering-disruption effect\n    this._renderer.shadowMap.enabled = true;\n    this._renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    this._renderer.outputEncoding = THREE.GammaEncoding;\n\n    // Init camera position and orientation\n    this._camera.position.copy(this._initialViewingVector);\n    this._camera.up = new THREE.Vector3(0, 0, 1); // Vector defining up direction of camera\n    this._camera.lookAt(0, 0, 0);\n\n    // Configure orbitControls\n    // ! Don't move this code to earlier position or controls will be screwy\n    // ! Note sure why; treat as brute fact supervening on inscrutable metaphysical states of affair\n    this._controls = new OrbitControls(this._camera, this._renderer.domElement);\n    this._controls.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\n    this._controls.dampingFactor = 0.25;\n    this._controls.target = new THREE.Vector3();\n\n    // Initiate Scene Entities\n    if (!this._sceneEntities.length) {\n      throw new Error(asciiError('You have no scene entities!'));\n    }\n    const initiatedSceneEntityGroups = await Promise.all(\n      this._sceneEntities.map(async sceneEntity => {\n        const initiatedSceneEntityGroup: THREE.Group = await sceneEntity.init();\n        if (\n          !initiatedSceneEntityGroup ||\n          !initiatedSceneEntityGroup.children.length\n        )\n          throw new Error(\n            asciiError(`\n            -----------------------------------------------------------------------------\n            The scene entity \"${sceneEntity.constructor.name}\" has empty sceneEntityGroup\n            after initialization!!!\n            -----------------------------------------------------------------------------\n            `)\n          );\n        return initiatedSceneEntityGroup;\n      })\n    )\n      .then(\n        _ =>\n          new Promise<THREE.Group[]>(resolve =>\n            setTimeout(() => resolve(_), 100)\n          )\n      )\n      .then(_ => _);\n    initiatedSceneEntityGroups.forEach(group => this._scene.add(group));\n\n    // Run updater methods\n    this.setHelpersVisibility(false);\n    this._updateCameraAspect();\n\n    // Begin Animation\n    this._startRendering();\n\n    // Enable superclass constructor to adjust settings after to initialization sequence\n    this._postInitHook();\n\n    // Remove loader div\n    this.setIsLoaderDivVisible(false);\n\n    //\n\n    // Finish\n    myprint('Finished initiating scene.');\n  }\n\n  protected registerSceneEntities = (sceneEntities: ISceneEntity[]) => {\n    sceneEntities.forEach(el => this._sceneEntities.push(el));\n  };\n\n  /**\n   * This method lets you show/hide the objects within in your scene\n   * designated as 'helpers'. It relies on the practice of setting the property `userData.isHelper = true`\n   * on any object you want to be classified as a helper\n   */\n  public setHelpersVisibility = (isHelpersShown: boolean) => {\n    this._isHelpersShown = !!isHelpersShown;\n    this._scene.traverse(child => {\n      return child.userData.isHelper && (child.visible = this._isHelpersShown);\n    });\n  };\n\n  public toggleHelpersVisibility = () => {\n    this._isHelpersShown = !this._isHelpersShown;\n    this.setHelpersVisibility(this._isHelpersShown);\n  };\n\n  public setIsLoaderDivVisible(val: boolean, fadeInOutTimeMs = 3000) {\n    this._isLoaderVisible = val;\n    setLoaderDivVisibility(this._isLoaderVisible, fadeInOutTimeMs);\n  }\n\n  public setFramesPerSecond(newFps: number) {\n    if (newFps <= 0 || newFps > 100) return;\n    this._fps = newFps;\n  }\n\n  private _updateCameraAspect = () => {\n    // Not sure where/how, but canvas' style width/height\n    // gets altered and needs to be reset to 100%\n    this._canvas.style.width = '100%';\n    this._canvas.style.height = '100%';\n    const width = this._canvas.offsetWidth || 1;\n    const height = this._canvas.offsetHeight || 1;\n    this._camera.aspect = width / height;\n    this._camera.updateProjectionMatrix();\n    this._renderer!.setSize(width, height);\n  };\n\n  public destroy: () => void = () => {\n    window.removeEventListener('resize', this._updateCameraAspect);\n    this._stopRendering();\n    this._destroyHook();\n  };\n\n  private _update() {\n    // Loop through scene entities and trigger their update methods\n    // If they need 'universal' time, they can access this._clock, etc.\n    this._sceneEntities.forEach(el =>\n      el.update(this._camera, this._clock.elapsedTime)\n    );\n\n    // Update camera\n    this.updateCamera();\n\n    // Finish loop\n    if (!this._camera || !this._renderer) throw new Error('Poor Logic');\n    if (!!this._requestAnimationFrameId) {\n      this._renderer.render(this._scene, this._camera);\n    }\n  }\n\n  private _render = () => {\n    if (!this._isRendering) return;\n    setTimeout(() => {\n      this._requestAnimationFrameId = requestAnimationFrame(this._render);\n      this._update();\n    }, 1000 / this._fps);\n  };\n\n  private _startRendering = () => {\n    myprint('Starting animation...');\n    this._isRendering = true;\n    this._clock.start();\n    this._render();\n  };\n\n  private _stopRendering = () => {\n    myprint('Stopping animation...');\n    this._isRendering = false;\n    this._clock.stop();\n  };\n}\n","import { loaderDivId } from './add-loader-div';\n\nexport const setLoaderDivVisibility = (\n  isVisible: boolean,\n  fadeOutTimeMs = 3000\n) => {\n  // --->>>\n\n  const loaderDiv = document.getElementById(loaderDivId);\n  loaderDiv?.style.setProperty(\n    'transition',\n    `opacity ${fadeOutTimeMs}ms ease-in-out`\n  );\n\n  // pointer-events:none\n\n  loaderDiv?.style.setProperty('opacity', `${isVisible ? 1 : 0}`);\n  /*   setTimeout(() => {\n    loaderDiv?.style.setProperty('display', isVisible ? 'block' : 'none');\n  }, fadeOutTimeMs); */\n};\n","import * as THREE from 'three';\n\n// Artificial delay to simulate poor networks, etc.\n// Can also be used to buffer planet load\nexport const delayMs = 5;\n\nexport const getTextureFromImageUrl = (\n  url: string,\n  name?: string\n): Promise<THREE.Texture> => {\n  return new Promise((resolve, reject) => {\n    new THREE.TextureLoader().load(\n      url,\n      texture => {\n        texture.encoding = THREE.GammaEncoding;\n        setTimeout(() => resolve(texture), delayMs);\n      },\n      xhr => console.log(`${name} ${(xhr.loaded / xhr.total) * 100}%`),\n      () => {\n        console.log('Failed to load: ', url);\n        reject(new Error('Failed to load: ' + url));\n      }\n    );\n  });\n};\n","export const solarSystemData = {\n  SUN: {\n    radiusMeters: 696342000,\n    periodDays: undefined,\n  },\n  MERCURY: {\n    radiusMeters: 2439700,\n    periodDays: 87.9691,\n  },\n  VENUS: {\n    radiusMeters: 6051800,\n    periodDays: 224.701,\n  },\n  EARTH: {\n    radiusMeters: 6378000,\n    periodDays: 365.256,\n  },\n  MARS: {\n    radiusMeters: 3389500,\n    periodDays: 686.971,\n  },\n  CERES: {\n    radiusMeters: 470000,\n    periodDays: 1683.14570801,\n  },\n  JUPITER: {\n    radiusMeters: 71492000,\n    periodDays: 4332.59,\n  },\n  SATURN: {\n    radiusMeters: 60268000,\n    periodDays: 10759.22,\n  },\n  URANUS: {\n    radiusMeters: 25362000,\n    periodDays: 30688.5,\n  },\n  NEPTUNE: {\n    radiusMeters: 24764000,\n    periodDays: 60182,\n  },\n  PLUTO: {\n    radiusMeters: 1188300,\n    periodDays: 90560,\n  },\n  HAUMEA: {\n    radiusMeters: 620_000,\n    periodDays: 103_410,\n  },\n  MAKEMAKE: {\n    radiusMeters: 720_000,\n    periodDays: 111_845,\n  },\n  ERIS: {\n    radiusMeters: 1_163_000,\n    periodDays: 204_199,\n  },\n  // Moons\n  MOON: {\n    radiusMeters: 350000,\n    periodDays: 29.5,\n  },\n};\n","/**\n * This module is the SSOT for global \"static\" settings for the app\n * that get set before the threejs scene begins. These govern e.g.\n * the default values of the \"dynamic\" settings that the user can set\n * and that will then persist within localStorage\n */\n\nexport interface IOptionsBooleans {\n  __sbnViewer__isPlanetsLoadedBeforeAnimationBegins: boolean;\n  __sbnViewer__isBeltLoadedBeforeAnimationBegins: boolean;\n  __sbnViewer__isBeltAbundanceToyModel: boolean;\n}\n\nexport interface IOptionsNumbers {\n  // Only apply if __sbnViewer__isBeltAbundanceToyModel === false\n  __sbnViewer__beltAbundanceMaxObjects: number;\n  __sbnViewer__beltAbundanceHThreshold: number;\n}\nexport interface IOptions extends IOptionsBooleans, IOptionsNumbers {}\n\nexport const defaultOptions: IOptions = {\n  __sbnViewer__isPlanetsLoadedBeforeAnimationBegins: true,\n  __sbnViewer__isBeltLoadedBeforeAnimationBegins: true,\n  __sbnViewer__isBeltAbundanceToyModel: true,\n  // Only apply if __sbnViewer__isBeltAbundanceToyModel === false\n  __sbnViewer__beltAbundanceMaxObjects: 100,\n  __sbnViewer__beltAbundanceHThreshold: -10,\n};\n","import {\n  IOptions,\n  defaultOptions,\n  IOptionsBooleans,\n  IOptionsNumbers,\n} from '../../options';\nimport { cleanLocalStorage } from './clean-local-storage';\n\n// Make sure local-storage has no extraneous values\ncleanLocalStorage();\n\n/**\n * Get all options from local storage; if a value from optionKeys is not\n * represented then return the default value\n */\nexport const getAllOptions = (): IOptions => {\n  // --->>\n\n  // Build up options from local storage\n  const optionsFromLocalStorage: Partial<IOptions> = {};\n  Object.keys(defaultOptions).forEach(key => {\n    const val = localStorage.getItem(key);\n    if (!val) return;\n    try {\n      const parsedVal = JSON.parse(val);\n      optionsFromLocalStorage[(key as any) as keyof IOptions] = parsedVal;\n    } catch (err) {\n      return;\n    }\n  });\n  return { ...defaultOptions, ...optionsFromLocalStorage };\n};\n\n/**\n * Wrapper that just returns the booleans from stored options\n */\nexport const getAllOptionsBooleans = (): IOptionsBooleans => {\n  const {\n    __sbnViewer__isBeltAbundanceToyModel,\n    __sbnViewer__isBeltLoadedBeforeAnimationBegins,\n    __sbnViewer__isPlanetsLoadedBeforeAnimationBegins,\n  } = getAllOptions();\n  return {\n    __sbnViewer__isBeltAbundanceToyModel,\n    __sbnViewer__isBeltLoadedBeforeAnimationBegins,\n    __sbnViewer__isPlanetsLoadedBeforeAnimationBegins,\n  };\n};\n\n/**\n * Wrapper that just returns the booleans from stored options\n */\nexport const getAllOptionsNumbers = (): IOptionsNumbers => {\n  const {\n    __sbnViewer__beltAbundanceHThreshold,\n    __sbnViewer__beltAbundanceMaxObjects,\n  } = getAllOptions();\n  return {\n    __sbnViewer__beltAbundanceHThreshold,\n    __sbnViewer__beltAbundanceMaxObjects,\n  };\n};\n","import * as THREE from 'three';\nimport { getAllOptions } from '../utils/get-all-options';\n\n/**\n * Base class that any entity must extend in order that its threeJs group\n * might get added to the threeJs scene owned by the manager\n */\nexport abstract class AbstractSceneEntity {\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~>>>\n\n  private static _isAsyncLoad = getAllOptions()\n    .__sbnViewer__isPlanetsLoadedBeforeAnimationBegins;\n  protected _isAsyncLoad = () => AbstractSceneEntity._isAsyncLoad;\n\n  protected _sceneEntityGroup: THREE.Group = new THREE.Group();\n  public getSceneEntityGroup = () => this._sceneEntityGroup;\n}\n","import * as THREE from 'three';\n\nimport { AbstractSceneEntity } from './abstract-scene-entity';\n\n/**\n * Time to finish switch from log to normal scales\n */\nconst timeToCompleteTransition = 2;\n\n/**\n * Base class for space object that can be toggled between\n * 'real' and 'toy' scales\n */\nexport abstract class AbstractToyModel extends AbstractSceneEntity {\n  // ~~~>>>\n\n  // Setup\n  protected _toyGroup: THREE.Object3D[] = [];\n  protected _realScale = 1;\n  protected _isZoomToToyScale = false;\n\n  protected isLogScale = false;\n  protected logTransitionClock = new THREE.Clock();\n\n  constructor(protected _toyScale: number) {\n    super();\n  }\n\n  public setIsZoomToToyScale(value: boolean) {\n    this._isZoomToToyScale = value;\n  }\n\n  public setToyScale(val: number) {\n    // this._toyScale = val;\n  }\n\n  public getScale() {\n    return this._isZoomToToyScale\n      ? this._toyScale\n      : this._realScale;\n  }\n\n  protected _setToToyScale() {\n    this._isZoomToToyScale = true;\n    this._toyGroup.forEach(child => {\n      const t = this._toyScale; // 't' for 'target'\n      child.scale.set(t, t, t);\n    });\n  }\n\n  public setIsLogScale(val: boolean) {\n    // Update flag\n    this.isLogScale = val;\n    // Restart clock\n    this.logTransitionClock = new THREE.Clock(true);\n    this.logTransitionClock.start();\n    // Update toyScale for log\n    // const nonLogToyScale = getPlanetToyScale(this.NAME);\n    const logToyScale = 1000;\n    this.setToyScale(this.isLogScale ? logToyScale : 3000);\n  }\n\n  public toggleIsLogScale() {\n    this.setIsLogScale(!this.isLogScale);\n  }\n\n  getLogInterpolationParam() {\n    const t =\n      this.logTransitionClock.getElapsedTime() /\n      timeToCompleteTransition;\n    const v = t < 1 ? t : 1;\n    return this.isLogScale ? v : 1 - v;\n  }\n\n  protected _updateModelScale() {\n    this._toyGroup.forEach(child => {\n      // Test if planet is already at target scale; 't' for target\n      const t = this._isZoomToToyScale\n        ? this._toyScale\n        : this._realScale;\n      const { x: sx, y: sy, z: sz } = child.scale;\n      if (sx === t) return;\n\n      // Update-mesh-scale logic\n      const ds = this._toyScale / 20;\n      if (sx < t) {\n        // Increase deficient scale\n        child.scale.set(sx + ds, sy + ds, sz + ds);\n      }\n      if (sx > t) {\n        // Decrease excessive scale\n        child.scale.set(sx - ds, sy - ds, sz - ds);\n      }\n      if (Math.abs(sx - t) < ds) {\n        // Snap scale to target\n        child.scale.set(t, t, t);\n      }\n    });\n  }\n}\n","/**\n * Constants for widget\n */\n\nimport { auToMeters } from './conversions';\n\n/**\n * Properties common to all html buttons\n */\nexport const buttonBackgroundColor = 'rgba(255,255,255,0.2)';\nexport const buttonClickedBackgroundColor = 'rgba(255,255,255,0.4)';\nexport const buttonTextColor = 'rgba(255,255,255,0.8)';\nexport const buttonCursorType = 'pointer';\nexport const buttonPadding = '10px';\nexport const buttonFadeInSpecs = '1s ease-in-out';\n\n// These two properties must be coordinated together using e.g. google.fonts\nexport const buttonFontFamily = \"'Odibee Sans', cursive\";\n// export const buttonCssUrl =\n// 'https://fonts.googleapis.com/css2?family=Odibee+Sans';\n\n/**\n * Root url of file server with copy of /images\n */\nexport const assetsBaseUrl: string = getAssetsBaseUrl();\n\nfunction getAssetsBaseUrl(): string {\n  return `https://sbn-solar-system-viewer.s3.amazonaws.com`;\n  let assetsBaseUrl: string = 'http://localhost:3001';\n\n  try {\n    // @ts-ignore\n    if (__IS_PRODUCTION__) {\n      assetsBaseUrl = `https://sbn-solar-system-viewer.s3.amazonaws.com`;\n    }\n  } catch (err) {\n    //\n  }\n\n  console.log('assetsBaseUrl: ', assetsBaseUrl);\n\n  return assetsBaseUrl;\n}\n\n/**\n * Often handy to use this as a scale\n */\nexport const au = auToMeters(1);\n","export enum EOrbitalType {\n  PLANET = 'PLANET',\n  DWARF_PLANET = 'DWARF_PLANET',\n  SUN = 'SUN',\n  ASTEROID = 'ASTEROID',\n}\n","import * as THREE from 'three';\n\nimport { getTextureFromImageUrl } from '../utils/get-texture-from-image-url';\nimport { solarSystemData } from '../data/basic-solar-system-data';\nimport { ISceneEntity } from '../models/ISceneEntity';\nimport { AbstractToyModel } from '../abstract-scene/abstract-toy-model';\nimport { assetsBaseUrl } from '../utils/constants';\nimport { getInitDate } from '../..';\nimport { IZoomable } from '../models/IZoomable';\nimport { myprint } from '../utils/myprint';\n\n/**\n * When a sprite is loaded it is given a size of '1'\n * So it needs to be scaled, in this case, to the size of the Sun\n * Further, the Sun only takes up a fraction of this image, so we need this factor\n * to scale the image further\n */\nconst realToToyRatio = 30;\nconst imageToSunRatio = 20;\n\nexport class Sun extends AbstractToyModel implements IZoomable {\n  // ~~~>>>\n\n  public readonly NAME = 'SUN';\n  private readonly position = new THREE.Vector3(0, 0, 0);\n  private readonly sunRadiusMeters = solarSystemData.SUN.radiusMeters;\n  private model = new THREE.Group();\n  private helper: THREE.LineSegments;\n  private sprite = new THREE.Sprite(\n    new THREE.SpriteMaterial({\n      blending: THREE.AdditiveBlending,\n      transparent: true,\n      visible: false,\n    })\n  );\n\n  constructor() {\n    super(realToToyRatio);\n\n    // Set up sun sprite size\n    this.sprite.scale.multiplyScalar(this.sunRadiusMeters * imageToSunRatio);\n    this.model.add(this.sprite);\n\n    // Set up helper\n    this.helper = new THREE.LineSegments(\n      new THREE.EdgesGeometry(\n        new THREE.SphereGeometry(this.sunRadiusMeters, 32)\n      ),\n      new THREE.LineBasicMaterial({ color: new THREE.Color('cyan') })\n    );\n    this.helper.userData.isHelper = true;\n    this.helper.rotateX(Math.PI / 2);\n    this.model.add(this.helper);\n  }\n\n  getRadius = () => this.sunRadiusMeters;\n\n  getPosition = () => this.position;\n\n  async init() {\n    return new Promise<THREE.Group>(async resolve => {\n      // --->>>\n\n      const spriteUrl = `${assetsBaseUrl}/stars/sun3-sprite-512.png`;\n      const onTextureLoad = (texture: THREE.Texture | null) => {\n        this.sprite.material.map = texture;\n        this.sprite.material.needsUpdate = true;\n        this.sprite.material.visible = true;\n      };\n\n      if (this._isAsyncLoad()) {\n        getTextureFromImageUrl(spriteUrl, 'SUN SPRITE IMAGE')\n          .then(onTextureLoad)\n          .catch(_ => null);\n      } else {\n        onTextureLoad(await getTextureFromImageUrl(spriteUrl).catch(_ => null));\n      }\n\n      this._toyGroup.push(this.model);\n      this._sceneEntityGroup.name = this.NAME;\n      this._sceneEntityGroup.add(this.model);\n      myprint('RESOLVED SUN');\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  update() {\n    this._updateModelScale();\n  }\n}\n","import * as THREE from 'three';\nimport { GLTFLoader as Loader } from 'three/examples/jsm/loaders/GLTFLoader';\n\nimport { centerOnBoundingBox } from './center-on-bounding-box';\nimport { enshadowChildren } from './enshadow-children';\nimport { delayMs } from './get-texture-from-image-url';\nimport { resizeThreejsObject } from './resize-threejs-object';\n\nexport function gltfLoader(\n  gltfUrl: string,\n  targetRadius?: number,\n  isCenteredOnBoundingBox?: boolean,\n  isShadowShown?: boolean\n) {\n  // ----------------->>>\n\n  return new Promise<THREE.Group>((resolve, reject) => {\n    new Loader().load(\n      gltfUrl,\n      gltf => {\n        const object = gltf.scene;\n        if (!!targetRadius) resizeThreejsObject(object, targetRadius);\n        if (!!isCenteredOnBoundingBox) centerOnBoundingBox(object);\n        if (!!isShadowShown) enshadowChildren(object);\n        setTimeout(() => resolve(object), delayMs);\n      },\n      xhr => !true && console.log((xhr.loaded / xhr.total) * 100 + '% loaded'),\n      error => {\n        console.log('Loading error occurred:', error.message);\n        reject();\n      }\n    );\n  });\n}\n","import * as THREE from 'three';\n\n/**\n * Function to scale an object so that the child with the largest bounding-sphere radius\n * will end up with a bounding sphere radius equal to the supplied targetRadius\n */\nexport function resizeThreejsObject(\n  object: THREE.Object3D,\n  targetRadius: number\n) {\n  // --------------------------------------------------------------------------->>>\n\n  let biggestSphereRadius: number = Math.pow(10, -10);\n  object.traverse(child => {\n    if (child instanceof THREE.Mesh) {\n      child.geometry.computeBoundingSphere(); // Need to run this, else `child.geometry.boundingSphere.radius` will be undefined\n      if (\n        !!child.geometry &&\n        !!child.geometry.boundingSphere &&\n        child.geometry.boundingSphere.radius > biggestSphereRadius\n      ) {\n        biggestSphereRadius = child.geometry.boundingSphere.radius;\n      }\n    }\n  });\n  const s = targetRadius / biggestSphereRadius;\n  object.scale.set(s, s, s);\n}\n","import * as THREE from 'three';\n\n/**\n * Function to center object on its bounding box\n *\n * An object created in blender may not have its origin at the object's\n * physical center, and this can be annoying when, say, you want to rotate\n * that object. This function will shift the object relative to its parent\n * coordinate system so that its center is at the parent's origin; that means\n * you can then e.g. rotate the parent to get a realistic/useful rotation effect\n * on this object\n */\nexport function centerOnBoundingBox(object: THREE.Object3D) {\n  // ----------------------------------------------------->>>\n\n  // Get center of boundingBox\n  const boundingBox = new THREE.Box3().setFromObject(object);\n  const [x2, y2, z2] = boundingBox.getCenter(new THREE.Vector3()).toArray();\n\n  // Move object to where center was\n  const [x1, y1, z1] = object.position.clone().toArray();\n  object.position.set(x1 - x2, y1 - y2, z1 - z2);\n}\n","/**\n * Simple function to ensure all children receive and cast shadows\n */\nexport function enshadowChildren(object: THREE.Object3D) {\n  object.traverse(child => {\n    if (child.type === 'Mesh') {\n      child.castShadow = true;\n      child.receiveShadow = true;\n    }\n  });\n}\n","import { au } from './constants';\n\n/**\n * Scale a given position to be a distance logged from the center\n * adjusted to leave the position of earth unaffected\n */\nexport function getLoggedPosition(position: THREE.Vector3) {\n  // --->>\n\n  // Get old length in aus\n  const oldLengthAus = position.length() / au;\n\n  // Take log and add 1 to keep earth untransformed and venus/mercury to not have negative length\n  const newLengthAus = Math.log10(oldLengthAus) + 1;\n\n  // Compute scale factor with which to multiply position\n  // to leave Earth unchanged, etc.; au's will cancel.\n  const f = newLengthAus / oldLengthAus;\n\n  // Clone, transform and return\n  const newPosition = position.clone();\n  newPosition.multiplyScalar(f);\n  return newPosition;\n}\n","\nexport const planetoidPositions = [\n  {\n    \"targetName\": \"sun\",\n    \"name\": \"Sun\",\n    \"coords\": [\n      [\n        25210928.558993563,\n        -144927919.5838006,\n        616.4165719002485\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"mercury\",\n    \"name\": \"Mercury\",\n    \"coords\": [\n      [\n        4158307.486552868,\n        -211334557.7063349,\n        -3491829.530005828\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"venus\",\n    \"name\": \"Venus\",\n    \"coords\": [\n      [\n        -82294621.71299145,\n        -148294440.250323,\n        6159836.205810949\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"earth\",\n    \"name\": \"Earth\",\n    \"coords\": [\n      [\n        0,\n        0,\n        0\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"moon\",\n    \"name\": \"Moon\",\n    \"coords\": [\n      [\n        -317650.2412950324,\n        -241883.1762389348,\n        36555.82307692753\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"mars\",\n    \"name\": \"Mars\",\n    \"coords\": [\n      [\n        233205983.5426107,\n        -148070929.2977431,\n        -5178164.826916882\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"phobos\",\n    \"name\": \"Phobos\",\n    \"coords\": [\n      [\n        233211101.3822698,\n        -148063549.26654398,\n        -5180330.081629686\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"deimos\",\n    \"name\": \"Deimos\",\n    \"coords\": [\n      [\n        233186774.50707632,\n        -148062438.7574959,\n        -5167707.330730483\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"jupiter\",\n    \"name\": \"Jupiter\",\n    \"coords\": [\n      [\n        624120093.099128,\n        294194667.0766834,\n        -15231894.21368285\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"io\",\n    \"name\": \"Io\",\n    \"coords\": [\n      [\n        624164885.3477856,\n        293774388.4102297,\n        -15246145.23852706\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"europa\",\n    \"name\": \"Europa\",\n    \"coords\": [\n      [\n        623488011.4500723,\n        294412338.4072513,\n        -15234937.06745064\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"ganymede\",\n    \"name\": \"Ganymede\",\n    \"coords\": [\n      [\n        623084362.3434044,\n        293923020.97313803,\n        -15253539.800429901\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"callisto\",\n    \"name\": \"Callisto\",\n    \"coords\": [\n      [\n        624786088.0070852,\n        295950532.9487813,\n        -15165777.127540601\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"saturn\",\n    \"name\": \"Saturn\",\n    \"coords\": [\n      [\n        983917265.7323134,\n        837637290.875011,\n        -55220039.89568457\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"mimas\",\n    \"name\": \"Mimas\",\n    \"coords\": [\n      [\n        983804295.554162,\n        837775268.2467614,\n        -55281673.06765947\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"enceladus\",\n    \"name\": \"Enceladus\",\n    \"coords\": [\n      [\n        983679565.3746865,\n        837641881.7164687,\n        -55199377.11102869\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"tethys\",\n    \"name\": \"Tethys\",\n    \"coords\": [\n      [\n        983700604.5912714,\n        837469073.320275,\n        -55112213.72623366\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"dione\",\n    \"name\": \"Dione\",\n    \"coords\": [\n      [\n        983738562.4193845,\n        837350098.2216039,\n        -55052252.21436214\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"rhea\",\n    \"name\": \"Rhea\",\n    \"coords\": [\n      [\n        983496804.0029027,\n        837934991.242741,\n        -55333843.04381296\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"titan\",\n    \"name\": \"Titan\",\n    \"coords\": [\n      [\n        983140311.5462098,\n        838539854.7562562,\n        -55609705.82393074\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"hyperion\",\n    \"name\": \"Hyperion\",\n    \"coords\": [\n      [\n        984302160.0114294,\n        838839267.3741561,\n        -55865294.29589018\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"iapetus\",\n    \"name\": \"Iapetus\",\n    \"coords\": [\n      [\n        980982613.8435904,\n        835728072.4766542,\n        -54179243.405296244\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"phoebe\",\n    \"name\": \"Phoebe\",\n    \"coords\": [\n      [\n        972213960.2836474,\n        834830558.7102093,\n        -53885687.66340354\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"uranus\",\n    \"name\": \"Uranus\",\n    \"coords\": [\n      [\n        2183985628.2833414,\n        -2199753070.769538,\n        -35622995.26408243\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"miranda\",\n    \"name\": \"Miranda\",\n    \"coords\": [\n      [\n        2184101946.303993,\n        -2199757607.225512,\n        -35471698.959801205\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"ariel\",\n    \"name\": \"Ariel\",\n    \"coords\": [\n      [\n        2184223622.94344,\n        -2199819140.7233667,\n        -35723726.65271461\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"umbriel\",\n    \"name\": \"Umbriel\",\n    \"coords\": [\n      [\n        2184075460.2902603,\n        -2199831716.226388,\n        -36041929.76960051\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"titania\",\n    \"name\": \"Titania\",\n    \"coords\": [\n      [\n        2183464821.607966,\n        -2199675659.639669,\n        -35874478.44673729\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"oberon\",\n    \"name\": \"Oberon\",\n    \"coords\": [\n      [\n        2184108809.161395,\n        -2199774688.69416,\n        -35657554.89030111\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"neptune\",\n    \"name\": \"Neptune\",\n    \"coords\": [\n      [\n        2540064210.9294276,\n        -3883775334.299313,\n        19040215.18757224\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"triton\",\n    \"name\": \"Triton\",\n    \"coords\": [\n      [\n        2539764375.3450627,\n        -3883795716.454041,\n        19228100.00823021\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"nereid\",\n    \"name\": \"Nereid\",\n    \"coords\": [\n      [\n        2540979035.75896,\n        -3874452071.9913187,\n        19721327.09596634\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"pluto\",\n    \"name\": \"Pluto\",\n    \"coords\": [\n      [\n        -1452347411.189161,\n        -4327388362.774305,\n        875270025.2620398\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"charon\",\n    \"name\": \"Charon\",\n    \"coords\": [\n      [\n        -1452347453.345824,\n        -4327398762.531079,\n        875253416.4866599\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"nix\",\n    \"name\": \"Nix\",\n    \"coords\": [\n      [\n        -1452354210.566489,\n        -4327369571.663404,\n        875312072.117779\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"hydra\",\n    \"name\": \"Hydra\",\n    \"coords\": [\n      [\n        -1452312605.147671,\n        -4327384745.736898,\n        875214226.638797\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"kerberos\",\n    \"name\": \"Kerberos\",\n    \"coords\": [\n      [\n        -1452336967.884832,\n        -4327411470.959048,\n        875215628.484605\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"styx\",\n    \"name\": \"Styx\",\n    \"coords\": [\n      [\n        -1452316434.820314,\n        -4327363528.824732,\n        875256065.2688253\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"ceres\",\n    \"name\": \"Ceres\",\n    \"coords\": [\n      [\n        -330462529.1598387,\n        -25133356.299232878,\n        69240119.8850444\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"vesta\",\n    \"name\": \"Vesta\",\n    \"coords\": [\n      [\n        -178000989.05262348,\n        -394670970.71612394,\n        32220090.03596649\n      ]\n    ]\n  },\n  {\n    \"targetName\": \"haumea\",\n    \"name\": \"Haumea\",\n    \"coords\": [\n      [\n        -6854796958.419188,\n        -910784984.6918347,\n        3348814291.8124943\n      ]\n    ]\n  }\n]","import * as THREE from 'three';\n\nimport { EphemPresets } from '../data/ephem-presets';\nimport { EOrbitalType } from '../models/EOrbitalType';\nimport { IXYZ } from '../models/IXYZ';\nimport { TPlanets } from '../models/TPlanets';\nimport { auToMeters } from './conversions';\nimport { SKEphem } from './sk-ephem';\nimport { SKOrbit } from './sk-orbit';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils';\nimport { getLoggedPosition } from './get-logged-position';\nimport { planetoidPositions } from './planetoid-positions-all';\nimport { getLocalOrbitData } from './get-local-orbit-data';\n\nconst au = auToMeters(1);\n\nexport class MyOrbit {\n  // --->>>\n\n  private orbitLine!: THREE.Line<\n    THREE.BufferGeometry,\n    THREE.LineBasicMaterial\n  >;\n\n  constructor(\n    private name: string,\n    private orbitalType = EOrbitalType.PLANET,\n    private color: string = 'white',\n    private opacity: number = 0.7\n  ) {\n    //\n    this.color =\n      orbitalType === EOrbitalType.ASTEROID\n        ? 'cyan'\n        : 'white';\n    switch (this.orbitalType) {\n      case EOrbitalType.ASTEROID: {\n        this.loadPlanet();\n        break;\n      }\n      case EOrbitalType.PLANET: {\n        this.loadPlanet();\n        break;\n      }\n      case EOrbitalType.DWARF_PLANET: {\n        this.loadPlanet();\n        break;\n      }\n      default: {\n        this.loadPlanet();\n        break;\n      }\n    }\n  }\n\n  loadPlanet = () => {\n    //\n    this.getOrbitLine();\n  };\n\n  getStaticPosition() {\n    const planet = planetoidPositions.find(\n      planetoidPosition =>\n        planetoidPosition.name.toLowerCase() ===\n        this.name.toLowerCase()\n    );\n    if (!planet) {\n      throw Error(`No planet found for ${this.name}`);\n    }\n    planet.coords;\n  }\n\n  getOrbitLine() {\n    if (!!this.orbitLine) return this.orbitLine;\n\n    const data = getLocalOrbitData(this.name);\n    const pts: THREE.Vector3[] = [];\n    data.coords.forEach((coord: number[]) => {\n      const f = 1;\n      pts.push(\n        new THREE.Vector3(\n          auToMeters(coord[0] * f),\n          auToMeters(coord[1] * f),\n          auToMeters(coord[2] * f)\n        )\n      );\n    });\n    const pointGeometry = new THREE.BufferGeometry();\n    pointGeometry.setFromPoints(pts);\n\n    pointGeometry.morphAttributes.position = [];\n    const positionAttribute =\n      pointGeometry.attributes.position;\n    const loggedPositions = [];\n    for (let i = 0; i < positionAttribute.count; i++) {\n      const f = 1;\n      const x0 = positionAttribute.getX(i) * f;\n      const y0 = positionAttribute.getY(i) * f;\n      const z0 = positionAttribute.getZ(i) * f;\n\n      const position = new THREE.Vector3(x0, y0, z0);\n      const loggedPosition = getLoggedPosition(position);\n      const { x, y, z } = loggedPosition;\n      loggedPositions.push(x, y, z);\n    }\n    pointGeometry.morphAttributes.position[0] = new THREE.Float32BufferAttribute(\n      loggedPositions,\n      3\n    );\n\n    this.orbitLine = new THREE.Line(\n      pointGeometry,\n      new THREE.LineBasicMaterial({\n        color: new THREE.Color(this.color),\n        morphTargets: true,\n      })\n    );\n\n    if (false) {\n      this.orbitLine = new THREE.LineSegments(\n        pointGeometry,\n        new THREE.LineBasicMaterial({\n          color: new THREE.Color(this.color),\n          morphTargets: true,\n        })\n      );\n    }\n\n    return this.orbitLine;\n  }\n\n  // getProjectedOrbitLine = () => this.SKprojectedOrbitLine;\n\n  getXyzMeters(tCenturiesSinceJ200 = 0): IXYZ {\n    // --->>>\n\n    const position = this.orbitLine.geometry.attributes\n      .position;\n    const x = position.getX(0);\n    const y = position.getY(0);\n    const z = position.getZ(0);\n    return { x, y, z };\n  }\n\n  getPosition(tCenturiesSinceJ200 = 0) {\n    const { x, y, z } = this.getXyzMeters(\n      tCenturiesSinceJ200\n    );\n    return new THREE.Vector3(x, y, z);\n  }\n\n  getTail(\n    radius: number,\n    tailLength = au * 0.3,\n    tCenturiesSinceJ200 = 0\n  ) {\n    // --->>\n\n    // Calc positions\n    const realBodyPosition = this.getPosition(\n      tCenturiesSinceJ200\n    );\n    const loggedBodyPosition = getLoggedPosition(\n      realBodyPosition\n    );\n\n    // Compute times for real and logged positions to stretch out to tailLength\n    let realTargetTime = tCenturiesSinceJ200;\n    let loggedTargetTime = tCenturiesSinceJ200;\n    let realDiffLength = 0;\n    let loggedDiffLength = 0;\n    let isRealSearch = true;\n    let isLoggedSearch = true;\n    const d = new Date();\n    while (isRealSearch || isLoggedSearch) {\n      // --->\n\n      isRealSearch = realDiffLength < tailLength;\n      isLoggedSearch = loggedDiffLength < tailLength;\n      if (isRealSearch) {\n        realTargetTime += 0.5 * 10;\n        realDiffLength = realBodyPosition.distanceTo(\n          this.getPosition(realTargetTime)\n        );\n      }\n      if (isLoggedSearch) {\n        loggedTargetTime += 0.5 * 10;\n        loggedDiffLength = loggedBodyPosition.distanceTo(\n          getLoggedPosition(\n            this.getPosition(loggedTargetTime)\n          )\n        );\n      }\n    }\n    // console.log(' 6>>> ', +new Date() - +d, ' >>> ');\n\n    // Set up loop to generate segments\n    const radialSegments = 3;\n    const heightSegments = 1;\n    const numberOfSegments = 5;\n    const realDt =\n      (realTargetTime - tCenturiesSinceJ200) /\n      numberOfSegments;\n    const loggedDt =\n      (loggedTargetTime - tCenturiesSinceJ200) /\n      numberOfSegments;\n    const dSegmentRadius = radius / numberOfSegments;\n    const geometries: {\n      realSegmentGeometry: THREE.BufferGeometry;\n      loggedSegmentGeometry: THREE.BufferGeometry;\n    }[] = [];\n    let lastRealPosition = realBodyPosition.clone();\n    let lastLoggedPosition = loggedBodyPosition.clone();\n    let nextRealPosition = realBodyPosition.clone();\n    let nextLoggedPosition = loggedBodyPosition.clone();\n    let lastSegmentRadius = radius;\n    let i = 0;\n\n    // Generate segments\n    for (\n      let segment = 1;\n      segment <= numberOfSegments;\n      segment++\n    ) {\n      // Extrapolate back in time to compute positions of tail\n      const tReal = tCenturiesSinceJ200 + segment * realDt;\n      const tLogged =\n        tCenturiesSinceJ200 + segment * loggedDt;\n      nextRealPosition = this.getPosition(tReal);\n      nextLoggedPosition = getLoggedPosition(\n        this.getPosition(tLogged)\n      );\n\n      // Compute radius of the end of this segment\n      let nextSegmentRadius =\n        lastSegmentRadius - dSegmentRadius;\n\n      // Compute height of segment\n      const realSegmentHeight = lastRealPosition.distanceTo(\n        nextRealPosition\n      );\n      const loggedSegmentHeight = lastLoggedPosition.distanceTo(\n        nextLoggedPosition\n      );\n\n      // Create tail segments at coord origin\n      const realSegmentGeometry = new THREE.CylinderGeometry(\n        lastSegmentRadius,\n        nextSegmentRadius,\n        realSegmentHeight,\n        radialSegments,\n        heightSegments,\n        !true\n      );\n      const loggedSegmentGeometry = new THREE.CylinderGeometry(\n        lastSegmentRadius,\n        nextSegmentRadius,\n        loggedSegmentHeight,\n        radialSegments,\n        heightSegments,\n        !true\n      );\n\n      // Position and rotate geometry\n      {\n        const { x, y, z } = lastRealPosition;\n        const orientation = new THREE.Matrix4();\n        orientation.makeTranslation(x, y, z);\n        orientation.lookAt(\n          lastRealPosition,\n          nextRealPosition,\n          new THREE.Vector3(0, 0, 1)\n        );\n        realSegmentGeometry.translate(\n          0,\n          -realSegmentHeight / 2,\n          0\n        ); // Rotate around end\n        realSegmentGeometry.rotateX(Math.PI / 2);\n        realSegmentGeometry.applyMatrix4(orientation);\n      }\n      {\n        const { x, y, z } = lastLoggedPosition;\n        const orientation = new THREE.Matrix4();\n        orientation.makeTranslation(x, y, z);\n        orientation.lookAt(\n          lastLoggedPosition,\n          nextLoggedPosition,\n          new THREE.Vector3(0, 0, 1)\n        );\n        loggedSegmentGeometry.translate(\n          0,\n          -loggedSegmentHeight / 2,\n          0\n        ); // Rotate around end\n        loggedSegmentGeometry.rotateX(Math.PI / 2);\n        loggedSegmentGeometry.applyMatrix4(orientation);\n      }\n\n      // Store segments\n      geometries.push({\n        realSegmentGeometry,\n        loggedSegmentGeometry,\n      });\n\n      // End loop\n      lastRealPosition = nextRealPosition;\n      lastLoggedPosition = nextLoggedPosition;\n      lastSegmentRadius = nextSegmentRadius;\n    }\n\n    // Merge segments into single geometry\n    const realGeometry = BufferGeometryUtils.mergeBufferGeometries(\n      geometries.map(el => el.realSegmentGeometry),\n      true\n    );\n    const loggedGeometry = BufferGeometryUtils.mergeBufferGeometries(\n      geometries.map(el => el.loggedSegmentGeometry),\n      true\n    );\n\n    return { realGeometry, loggedGeometry };\n  }\n}\n","//\nimport * as mercuryOrbit from '../data/orbits/planetoid/mercury-orbit.json';\nimport * as venusOrbit from '../data/orbits/planetoid/venus-orbit.json';\nimport * as earthOrbit from '../data/orbits/planetoid/earth-orbit.json';\nimport * as marsOrbit from '../data/orbits/planetoid/mars-orbit.json';\nimport * as jupiterOrbit from '../data/orbits/planetoid/jupiter-orbit.json';\nimport * as saturnOrbit from '../data/orbits/planetoid/saturn-orbit.json';\nimport * as uranusOrbit from '../data/orbits/planetoid/uranus-orbit.json';\nimport * as neptuneOrbit from '../data/orbits/planetoid/neptune-orbit.json';\n//\nimport * as arielOrbit from '../data/orbits/planetoid/ariel-orbit.json';\nimport * as callistoOrbit from '../data/orbits/planetoid/callisto-orbit.json';\nimport * as ceresOrbit from '../data/orbits/planetoid/ceres-orbit.json';\nimport * as plutoOrbit from '../data/orbits/planetoid/pluto-orbit.json';\nimport * as haumeaOrbit from '../data/orbits/planetoid/haumea-orbit.json';\n\n//\nimport * as comet65POrbit from '../data/orbits/comet/65P-orbit.json';\n// import * as comet65POrbit from '../data/orbits-30/comet/65P-orbit.json';\n\nexport function getLocalOrbitData(name: string) {\n  //\n  switch (name.toUpperCase()) {\n    case 'MERCURY': {\n      return mercuryOrbit;\n    }\n    case 'VENUS': {\n      return venusOrbit;\n    }\n    case 'EARTH': {\n      return earthOrbit;\n    }\n    case 'MARS': {\n      return marsOrbit;\n    }\n    case 'JUPITER': {\n      return jupiterOrbit;\n    }\n    case 'SATURN': {\n      return saturnOrbit;\n    }\n    case 'URANUS': {\n      return uranusOrbit;\n    }\n    case 'NEPTUNE': {\n      return neptuneOrbit;\n    }\n    // DWARF PLANETS: Alphabetic order\n    case 'ARIAL': {\n      return arielOrbit;\n    }\n    case 'CALLISTO': {\n      return callistoOrbit;\n    }\n    case 'CERES': {\n      return ceresOrbit;\n    }\n    case 'PLUTO': {\n      return plutoOrbit;\n    }\n    case 'HAUMEA': {\n      return haumeaOrbit;\n    }\n    //\n    case '65P': {\n      return comet65POrbit;\n    }\n    default: {\n      throw new Error(`No local orbit found for ${name}`);\n      return earthOrbit;\n    }\n  }\n}\n","import * as THREE from 'three';\n\nimport { createEarthCloudMesh } from '../utils/create-earth-cloud-mesh';\nimport { getTextureFromImageUrl } from '../utils/get-texture-from-image-url';\nimport { getPlanetRadiusMeters } from '../utils/get-planet-radius-meters';\nimport { EOrbitalType } from '../models/EOrbitalType';\nimport { gltfLoader } from '../utils/gltf-loader';\nimport { TPlanets } from '../models/TPlanets';\nimport { assetsBaseUrl, au } from '../utils/constants';\nimport { getInitDate } from '../..';\nimport { AbstractToyModel } from '../abstract-scene/abstract-toy-model';\nimport { Orbit } from '../utils/orbit';\nimport { IZoomableOrbital } from '../models/IZoomableOrbital';\nimport { getLoggedPosition } from '../utils/get-logged-position';\nimport { myprint } from '../utils/myprint';\nimport { MyOrbit } from '../utils/myorbit';\n\nconst planetsWithBumpMaps: Partial<TPlanets>[] = [\n  'MERCURY',\n  'VENUS',\n  'EARTH',\n  'MARS',\n  'CERES',\n  'PLUTO',\n];\n\nconst planetsAsLoadableObjects: Partial<TPlanets>[] = [\n  'HAUMEA',\n  'MAKEMAKE',\n  'ERIS',\n];\n\nconst dwarfPlanets: Partial<TPlanets>[] = [\n  'CERES',\n  'PLUTO',\n  'HAUMEA',\n  'MAKEMAKE',\n  'ERIS',\n];\n\nconst getPlanetType = (name: TPlanets) => {\n  return dwarfPlanets.includes(name)\n    ? EOrbitalType.DWARF_PLANET\n    : EOrbitalType.PLANET;\n};\n\n/**\n * \"Cloud Radius Factor\": ratio of cloud radius to planet radius\n */\nconst crf = 1.05;\n\n/**\n * \"Helper Radius Factor\": ratio of helper radius to clouded-planet radius\n */\nconst hrf = 1.2;\n\n/**\n * Get the toy scale for different planets\n */\nconst getPlanetToyScale = (name: TPlanets) => {\n  if (name === 'PLUTO') return 10000;\n  if (name === 'CERES') return 10000;\n  if (name === 'HAUMEA') return 15000;\n  if (name === 'MAKEMAKE') return 15000;\n  if (name === 'ERIS') return 15000;\n  //\n\n  if (name === 'JUPITER') return 500;\n  if (name === 'SATURN') return 400;\n  if (name === 'URANUS') return 1200;\n  if (name === 'NEPTUNE') return 1200;\n  return 2000;\n};\n\nexport class Planet extends AbstractToyModel\n  implements IZoomableOrbital {\n  // --->>>\n\n  private helper: THREE.LineSegments;\n  private model = new THREE.Group();\n  private clouds?: THREE.Mesh;\n  private myOrbit: MyOrbit;\n  // private SKprojectedOrbitLine: THREE.Line<\n  // THREE.BufferGeometry,\n  // THREE.LineBasicMaterial\n  // >;\n  private radius: number;\n\n  constructor(public readonly NAME: TPlanets) {\n    // --->>\n\n    super(getPlanetToyScale(NAME));\n\n    this.radius = getPlanetRadiusMeters(NAME);\n    this.myOrbit = new MyOrbit(\n      this.NAME,\n      getPlanetType(NAME),\n      'green'\n    );\n    // this.SKprojectedOrbitLine = this.orbit.getProjectedOrbitLine();\n    this._sceneEntityGroup.add(this.myOrbit.getOrbitLine());\n\n    // Make the model toy-scalable\n    this._toyGroup.push(this.model);\n\n    // Set up helper\n    this.helper = new THREE.LineSegments(\n      new THREE.EdgesGeometry(\n        new THREE.SphereGeometry(this.radius * hrf, 32)\n      ),\n      new THREE.LineBasicMaterial({\n        color: new THREE.Color('cyan'),\n      })\n    );\n    this.helper.userData.isHelper = true;\n    this.helper.rotateX(Math.PI / 2);\n    this.model.add(this.helper);\n  }\n\n  async init() {\n    return new Promise<THREE.Group>(async resolve => {\n      // --->>>\n\n      // Choose between planet as sphere or loadable object\n      if (planetsAsLoadableObjects.includes(this.NAME)) {\n        console.log('LOADING PLANET AS OBJECT');\n        await this.loadPlanetAsObject();\n      } else {\n        console.log('LOADING PLANET AS TEXTURED SPHERE');\n        await this.loadPlanetAsTexturedSphere();\n      }\n\n      myprint('RESOLVED ' + this.NAME);\n      this._sceneEntityGroup.add(this.model);\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  loadPlanetAsObject = async () => {\n    const name = this.NAME.toLowerCase();\n    const objUrl = `${assetsBaseUrl}/planets/${name}/${name}.glb`;\n\n    // Add temporary sphere till object is loaded\n    const tempMesh = new THREE.Mesh(\n      new THREE.SphereGeometry(this.radius, 32, 32),\n      new THREE.MeshPhongMaterial()\n    );\n    tempMesh.rotateX(Math.PI / 2);\n    this.model.add(tempMesh);\n\n    const onObjectLoad = (obj: THREE.Group | null) => {\n      tempMesh.visible = false;\n      if (!!obj) this.model.add(obj);\n    };\n\n    if (this._isAsyncLoad()) {\n      gltfLoader(objUrl, this.radius)\n        .then(onObjectLoad)\n        .catch(_ => onObjectLoad(null));\n    } else {\n      onObjectLoad(\n        await gltfLoader(objUrl, this.radius).catch(\n          _ => null\n        )\n      );\n    }\n  };\n\n  loadPlanetAsTexturedSphere = async () => {\n    const name = this.NAME.toLowerCase();\n    const imageUrl = `${assetsBaseUrl}/planets/${name}/${name}-map-1024.jpg`;\n    const bumpUrl = `${assetsBaseUrl}/planets/${name}/${name}-bump-1024.png`;\n    const isBumpy = planetsWithBumpMaps.includes(this.NAME);\n    const isEarth = this.NAME === 'EARTH';\n    const pNull = Promise.resolve(null);\n    const mesh = new THREE.Mesh(\n      new THREE.SphereGeometry(this.radius, 32, 32),\n      new THREE.MeshPhongMaterial({\n        shininess: isEarth ? 25 : 2,\n      })\n    );\n    mesh.rotateX(Math.PI / 2);\n    this.model.add(mesh);\n\n    const onTexturesLoad = ([\n      promisedMapTexture,\n      promisedBumpTexture,\n      promisedEarthCloudTexture,\n    ]: PromiseSettledResult<THREE.Texture | null>[]) => {\n      // Unpack PromiseSettledResults:\n      const map =\n        promisedMapTexture.status === 'fulfilled'\n          ? promisedMapTexture.value\n          : null;\n      const bumpMap =\n        promisedBumpTexture.status === 'fulfilled'\n          ? promisedBumpTexture.value\n          : null;\n      const earthClouds =\n        promisedEarthCloudTexture.status === 'fulfilled'\n          ? promisedEarthCloudTexture.value\n          : null;\n\n      mesh.material.map = map;\n      mesh.material.bumpMap = bumpMap;\n      mesh.material.bumpScale = this.radius * 50;\n      mesh.material.needsUpdate = true;\n\n      if (earthClouds) {\n        this.clouds = new THREE.Mesh<THREE.SphereGeometry>(\n          new THREE.SphereGeometry(\n            this.radius * crf,\n            32,\n            32\n          ),\n          new THREE.MeshPhongMaterial({\n            map: earthClouds,\n            side: THREE.DoubleSide,\n            transparent: true,\n            opacity: 0.6,\n            depthWrite: false, // Prevents mesh from blocking background sprites\n          })\n        );\n        this.model.add(this.clouds);\n      }\n    };\n\n    // Create promises\n    const promises = [\n      getTextureFromImageUrl(imageUrl, name).catch(\n        _ => null\n      ),\n      isBumpy\n        ? getTextureFromImageUrl(bumpUrl, name).catch(\n            _ => null\n          )\n        : pNull,\n      isEarth\n        ? createEarthCloudMesh().catch(_ => null)\n        : pNull,\n    ];\n\n    // Wait for promises or load async\n    if (this._isAsyncLoad()) {\n      Promise.allSettled(promises).then(onTexturesLoad);\n    } else {\n      onTexturesLoad(await Promise.allSettled(promises));\n    }\n  };\n\n  public getPosition = () => {\n    return this.model.position;\n  };\n\n  public getRadius = () => this.radius;\n\n  public getOrbit = () => this.myOrbit;\n\n  public setIsOrbitVisible = (val: boolean) => {\n    // this.SKprojectedOrbitLine.visible = val;\n    this.myOrbit.getOrbitLine().visible = val;\n  };\n\n  // Gets position of planet in either normal or logged coords\n  getDestinationPosition(_tCenturiesSinceJ200 = 0) {\n    const u = this.getLogInterpolationParam();\n    const position = this.myOrbit.getPosition(\n      _tCenturiesSinceJ200\n    );\n    const loggedPosition = getLoggedPosition(position);\n    return position.lerp(loggedPosition, u);\n  }\n\n  updateOrbitLine() {\n    const u = this.getLogInterpolationParam();\n    this.myOrbit.getOrbitLine().morphTargetInfluences![0] = u;\n  }\n\n  update() {\n    const { x, y, z } = this.getDestinationPosition();\n    this.model.position.set(x, y, z);\n\n    this.updateOrbitLine();\n\n    // Toy Model Scale\n    this._updateModelScale();\n\n    // Spin planet\n    this.model.rotateZ(0.0015);\n    if (!!this.clouds) {\n      // Spin clouds relative to planet\n      this.clouds.rotateY(-0.0001);\n      this.clouds.rotateZ(-0.0004);\n    }\n  }\n}\n","import * as THREE from 'three';\nimport { assetsBaseUrl } from './constants';\n\n/**\n * This function is adapted from `https://github.com/jeromeetienne/threex.planets/blob/master/threex.planets.js`, based on instructions from `http://learningthreejs.com/blog/2013/09/16/how-to-make-the-earth-in-webgl/`\n * Jpegs don't have an alpha channel, so the idea is to load cloud image from jpg and remove pixels manually to create an alpha-channel effect\n */\nexport function createEarthCloudMesh(): Promise<THREE.Texture> {\n  // --->>>\n\n  return new Promise((resolve, reject) => {\n    // --->>>\n\n    // create destination canvas\n    const canvasResult = document.createElement('canvas');\n    canvasResult.width = 1024;\n    canvasResult.height = 512;\n    const contextResult = canvasResult.getContext('2d');\n\n    // load earthcloudmap\n    const imageMap = new Image();\n    imageMap.crossOrigin = 'Anonymous';\n\n    // const material = new THREE.MeshPhongMaterial({\n    //   map: new THREE.Texture(canvasResult),\n    //   side: THREE.DoubleSide,\n    //   transparent: true,\n    //   opacity: 0.6,\n    // });\n    // const mesh = new THREE.Mesh<THREE.SphereGeometry>(geometry, material);\n\n    imageMap.onerror = (error: any) => {\n      console.log('Error: ', error);\n      reject();\n    };\n    imageMap.onload = function() {\n      // --->>>\n\n      // create dataMap ImageData for earthcloudmap\n      const canvasMap = document.createElement('canvas');\n      canvasMap.width = imageMap.width;\n      canvasMap.height = imageMap.height;\n      const contextMap = canvasMap.getContext('2d');\n      contextMap!.drawImage(imageMap, 0, 0);\n      const dataMap = contextMap!.getImageData(\n        0,\n        0,\n        canvasMap.width,\n        canvasMap.height\n      );\n\n      // load earthcloudmaptrans\n      const imageTrans = new Image();\n      imageTrans.crossOrigin = 'Anonymous';\n      imageTrans.addEventListener('load', function() {\n        // --->>>\n\n        // create dataTrans ImageData for earthcloudmaptrans\n        const canvasTrans = document.createElement('canvas');\n        canvasTrans.width = imageTrans.width;\n        canvasTrans.height = imageTrans.height;\n        const contextTrans = canvasTrans.getContext('2d');\n        contextTrans!.drawImage(imageTrans, 0, 0);\n        try {\n          const dataTrans = contextTrans!.getImageData(\n            0,\n            0,\n            canvasTrans.width,\n            canvasTrans.height\n          );\n          // merge dataMap + dataTrans into dataResult\n          let dataResult = contextMap!.createImageData(\n            canvasMap.width,\n            canvasMap.height\n          );\n          for (let y = 0, offset = 0; y < imageMap.height; y++) {\n            for (let x = 0; x < imageMap.width; x++, offset += 4) {\n              dataResult.data[offset + 0] = dataMap.data[offset + 0];\n              dataResult.data[offset + 1] = dataMap.data[offset + 1];\n              dataResult.data[offset + 2] = dataMap.data[offset + 2];\n              dataResult.data[offset + 3] = 255 - dataTrans.data[offset + 0];\n            }\n          }\n\n          // update texture with result\n          contextResult!.putImageData(dataResult, 0, 0);\n          // if (!!material && !!material.map) material.map.needsUpdate = true;\n        } catch (error) {\n          console.log('Error: ', error);\n          reject();\n        }\n        resolve(new THREE.CanvasTexture(canvasResult));\n      });\n      imageTrans.src = `${assetsBaseUrl}/planets/earth/earth-clouds-trans-1024.png`;\n    };\n    imageMap.src = `${assetsBaseUrl}/planets/earth/earth-clouds-color-1024.png`;\n  });\n}\n","import { solarSystemData } from '../data/basic-solar-system-data';\nimport { TPlanets } from '../models/TPlanets';\n\nexport function getPlanetRadiusMeters(name: TPlanets): number {\n  // --->>>\n\n  return solarSystemData[name].radiusMeters;\n}\n","import * as THREE from 'three';\n\nimport { AbstractSceneEntity } from '../abstract-scene/abstract-scene-entity';\nimport { ISceneEntity } from '../models/ISceneEntity';\nimport { auToMeters } from '../utils/conversions';\n\nexport class MiscHelpers extends AbstractSceneEntity implements ISceneEntity {\n  // ~~~>>>\n\n  public readonly NAME = 'Misc Helpers';\n\n  async init() {\n    return new Promise<THREE.Group>(resolve => {\n      const axesHelper = new THREE.AxesHelper(auToMeters(100));\n      // Mark this as helper in order to be toggle-able\n      axesHelper.userData.isHelper = true;\n      this._sceneEntityGroup.add(axesHelper);\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  update = () => {};\n}\n","import * as THREE from 'three';\n\nimport { AbstractSceneEntity } from '../abstract-scene/abstract-scene-entity';\nimport { ISceneEntity } from '../models/ISceneEntity';\n\nexport class SimpleLight extends AbstractSceneEntity implements ISceneEntity {\n  // ~~~>>>\n\n  public readonly NAME = 'Simple Light';\n  private _light?: THREE.AmbientLight;\n\n  constructor(private _defaultIntensity = 0.3) {\n    super();\n  }\n\n  async init() {\n    return new Promise<THREE.Group>(resolve => {\n      this._light = new THREE.AmbientLight(0x333333, this._defaultIntensity);\n      this._light.userData.isAmbientLight = true;\n      this._sceneEntityGroup.add(this._light);\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  setPower = (intensity?: number) => {\n    const newIntensity = intensity || this._defaultIntensity;\n    this._light!.intensity = newIntensity;\n  };\n\n  setIsOn(isOn: boolean) {\n    this._light!.visible = isOn;\n  }\n\n  update = () => {};\n}\n","import * as THREE from 'three';\nimport { getLoggedPosition } from './get-logged-position';\n\ninterface IVertices {\n  [index: string]: {\n    x: number;\n    y: number;\n    z: number;\n  };\n}\n\n/**\n * Function to take a dodecahedron and warp the points to createa jagged\n * asteroid shape\n */\nexport const createAsteroidGeometry = (\n  size: number,\n  warpFactor = 0.25,\n  position = new THREE.Vector3()\n) => {\n  // --->>>\n\n  const realGeometry = new THREE.DodecahedronGeometry(size, 1);\n  const positionAttribute = realGeometry.getAttribute('position');\n  const point = new THREE.Vector3();\n  const vertices: IVertices = {};\n\n  // Collect all repeated points into a hashmap of unique vertices\n  for (let i = 0; i < positionAttribute.count; i++) {\n    point.fromBufferAttribute(positionAttribute, i); // read vertex\n    let key = [point.x, point.y, point.z].join(',');\n    if (!vertices[key]) {\n      vertices[key] = {\n        x: point.x += Math.random() * size * warpFactor,\n        y: point.y += Math.random() * size * warpFactor,\n        z: point.z += Math.random() * size * warpFactor,\n      };\n    }\n    const { x, y, z } = vertices[key];\n    positionAttribute.setXYZ(i, x, y, z);\n  }\n\n  // Stretch/flatten asteroid randomly\n  const sx = 0.5 + Math.random();\n  const sy = 0.5 + Math.random();\n  const sz = 0.5 + Math.random();\n  realGeometry.scale(sx, sy, sz);\n\n  // Get create logged stuff\n  const loggedGeometry = realGeometry.clone();\n  const loggedPosition = getLoggedPosition(position);\n\n  // Translate geometries\n  {\n    const { x, y, z } = position;\n    realGeometry.translate(x, y, z);\n  }\n  {\n    const { x, y, z } = loggedPosition;\n    loggedGeometry.translate(x, y, z);\n  }\n\n  return {\n    realGeometry,\n    loggedGeometry,\n  };\n};\n","import * as THREE from 'three';\n\nimport { EOrbitalType } from '../models/EOrbitalType';\nimport { Orbit } from '../utils/orbit';\nimport { AbstractToyModel } from '../abstract-scene/abstract-toy-model';\nimport { createAsteroidGeometry } from '../utils/create-asteroid-geometry';\nimport { getTextureFromImageUrl } from '../utils/get-texture-from-image-url';\nimport { assetsBaseUrl } from '../utils/constants';\nimport { IZoomableOrbital } from '../models/IZoomableOrbital';\nimport { getLoggedPosition } from '../utils/get-logged-position';\nimport { MyOrbit } from '../utils/myorbit';\n\nconst defaultRadiusMeters = 10000;\n\nexport class Asteroid extends AbstractToyModel\n  implements IZoomableOrbital {\n  // --->>>\n\n  private model = new THREE.Group();\n  private myOrbit: MyOrbit;\n\n  constructor(\n    public readonly NAME: string,\n    private radius = defaultRadiusMeters\n  ) {\n    super(300 * 100);\n    this.myOrbit = new MyOrbit(\n      NAME,\n      EOrbitalType.ASTEROID,\n      'red',\n      1\n    );\n    this._sceneEntityGroup.add(this.myOrbit.getOrbitLine());\n  }\n\n  async init() {\n    return new Promise<THREE.Group>(async resolve => {\n      // --->>>\n\n      const url = `${assetsBaseUrl}/misc/asteroid-texture-1024.jpg`;\n\n      const geometry = createAsteroidGeometry(this.radius);\n      const mesh = new THREE.Mesh(\n        geometry.realGeometry,\n        new THREE.MeshPhongMaterial({\n          // color: new THREE.Color('red'),\n          map: await getTextureFromImageUrl(url),\n          shininess: 0,\n        })\n      );\n      this.model.add(mesh);\n      this._toyGroup.push(this.model);\n      this._sceneEntityGroup.add(this.model);\n\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  public getPosition = () => {\n    const { x, y, z } = this.myOrbit.getXyzMeters();\n    return new THREE.Vector3(x, y, z);\n  };\n\n  public getRadius = () => this.radius;\n\n  public getOrbit = () => this.myOrbit;\n\n  public setIsOrbitVisible = (val: boolean) => {\n    this.myOrbit.getOrbitLine().visible = val;\n  };\n\n  // Gets position of planet in either normal or logged coords\n  getDestinationPosition(_tCenturiesSinceJ200 = 0) {\n    const u = this.getLogInterpolationParam();\n    const position = this.myOrbit.getPosition(\n      _tCenturiesSinceJ200\n    );\n    const logpos = getLoggedPosition(position);\n    return position.lerp(logpos, u);\n  }\n\n  updateOrbitLine() {\n    const u = this.getLogInterpolationParam();\n    this.myOrbit.getOrbitLine().morphTargetInfluences![0] = u;\n  }\n\n  update() {\n    const { x, y, z } = this.getDestinationPosition();\n    this.model.position.set(x, y, z);\n\n    this.updateOrbitLine();\n\n    // Toy Model Scale\n    this._updateModelScale();\n  }\n}\n","import * as THREE from 'three';\n\nimport { AbstractSceneEntity } from '../abstract-scene/abstract-scene-entity';\nimport { ISceneEntity } from '../models/ISceneEntity';\n\nexport class PointLight extends AbstractSceneEntity implements ISceneEntity {\n  // ~~~>>>\n\n  public readonly NAME = 'Point Light';\n  private _light?: THREE.PointLight;\n\n  constructor(private _defaultIntensity = 0.3, private _radius = 1) {\n    super();\n  }\n\n  async init() {\n    return new Promise<THREE.Group>(resolve => {\n      this._light = new THREE.PointLight(0x333333, this._defaultIntensity);\n      const helper = new THREE.PointLightHelper(\n        this._light,\n        this._radius,\n        new THREE.Color('red')\n      );\n      helper.userData.isHelper = true;\n      this._sceneEntityGroup.add(this._light);\n      this._sceneEntityGroup.add(helper);\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  setPower = (intensity?: number) => {\n    const newIntensity = intensity || this._defaultIntensity;\n    this._light!.intensity = newIntensity;\n  };\n\n  setIsOn(isOn: boolean) {\n    this._light!.visible = isOn;\n  }\n\n  update = () => {};\n}\n","import * as THREE from 'three';\n\nimport { AbstractToyModel } from '../abstract-scene/abstract-toy-model';\nimport { au } from '../utils/constants';\nimport { IZoomable } from '../models/IZoomable';\n\nconst dxy = au * 0.1;\n\n/**\n * This entity doesn't draw anything, it's just an empty object\n * positioned so as to be zoomable from above the sun\n */\nexport class BirdsEye extends AbstractToyModel implements IZoomable {\n  // --->>>\n\n  private token = new THREE.Object3D();\n  private position = new THREE.Vector3(dxy, dxy, au * 30);\n\n  constructor(public readonly NAME = 'BIRDSEYE', zInAus = 30) {\n    super(1);\n    this.position.setZ(zInAus * au);\n    const { x, y, z } = this.position;\n    this.token.position.set(x, y, z);\n    this._sceneEntityGroup.add(this.token);\n  }\n\n  async init() {\n    return new Promise<THREE.Group>(async resolve => {\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  public getPosition = () => {\n    return this.token.position;\n  };\n\n  getRadius = () => 1;\n\n  update() {}\n}\n","import * as THREE from 'three';\nimport { IZoomable } from '../models/IZoomable';\nimport { BirdsEye } from '../scene-entities/birds-eye';\n\n/**\n *\n *\n */\nexport const getDestinationLookPosition = (zoomTarget: IZoomable) => {\n  return zoomTarget instanceof BirdsEye\n    ? new THREE.Vector3(0, 0, 0)\n    : zoomTarget.getPosition();\n};\n","import { IOptions } from '../../options';\n\n/**\n * Provide dict of key-value pairs to set in local storage\n */\nexport const setOptions = (newOptions: Partial<IOptions>) => {\n  Object.keys(newOptions).forEach(key => {\n    // console.log('Key Value:', key, newOptions[(key as any) as keyof IOptions]);\n    localStorage.setItem(\n      key,\n      JSON.stringify(newOptions[(key as any) as keyof IOptions])\n    );\n  });\n};\n","import { simpleUuid } from '../utils/simple-uuid';\n\n/**\n * Function to create a div with three columns in order to wrap around switches and/or\n * input fields and look neat in the settings menu\n */\n\nexport const createThreeColumnContainer = (\n  id = 'placeholder-id' + simpleUuid()\n) => {\n  /**\n   * Construct and return divs of the following format\n   *\n   *\n    <div class=\"three-column-container\">\n      <div class=\"first-column\"> </div>\n      <div class=\"second-column\"></div>\n      <div class=\"third-column\"> </div>\n    <div>\n   *\n   */\n\n  // Create the container\n  const threeColumnContainerDiv = document.createElement('div');\n  threeColumnContainerDiv.classList.add('three-column-container');\n  threeColumnContainerDiv.style.setProperty('overflow-x', 'scroll');\n  threeColumnContainerDiv.style.setProperty('width', '100%');\n  threeColumnContainerDiv.style.setProperty('height', '34px');\n  threeColumnContainerDiv.style.setProperty('display', 'flex');\n  threeColumnContainerDiv.style.setProperty('white-space', 'nowrap');\n  threeColumnContainerDiv.id = id;\n\n  // Params for column widths\n  const firstColFlexBasisPxls = 280;\n  const secondColFlexBasisPxls = 70;\n\n  // Create its immediate children\n  const firstColumnDiv = document.createElement('div');\n  firstColumnDiv.classList.add('first-column');\n  firstColumnDiv.style.setProperty('display', 'flex');\n  firstColumnDiv.style.setProperty('align-items', 'center');\n  firstColumnDiv.style.setProperty('justify-content', 'right');\n  firstColumnDiv.style.setProperty('flex', `1 0 ${firstColFlexBasisPxls}px`);\n  firstColumnDiv.style.setProperty('padding-right', '10px');\n  firstColumnDiv.style.setProperty('overflow-x', 'scroll');\n  threeColumnContainerDiv.append(firstColumnDiv);\n\n  const secondColumnDiv = document.createElement('div');\n  secondColumnDiv.classList.add('second-column');\n  secondColumnDiv.style.setProperty('display', 'flex');\n  secondColumnDiv.style.setProperty('align-items', 'center');\n  secondColumnDiv.style.setProperty('justify-content', 'center');\n  secondColumnDiv.style.setProperty('flex', `0 0 ${secondColFlexBasisPxls}px`);\n  threeColumnContainerDiv.append(secondColumnDiv);\n\n  const thirdColumnDiv = document.createElement('div');\n  thirdColumnDiv.classList.add('third-column');\n  thirdColumnDiv.style.setProperty('display', 'flex');\n  thirdColumnDiv.style.setProperty('align-items', 'center');\n  thirdColumnDiv.style.setProperty('justify-content', 'left');\n  thirdColumnDiv.style.setProperty(\n    'flex',\n    `1 0 calc(100% - ${secondColFlexBasisPxls}px - ${firstColFlexBasisPxls}px - 20px)`\n  );\n  thirdColumnDiv.style.setProperty('padding-left', '10px');\n  threeColumnContainerDiv.append(thirdColumnDiv);\n\n  return {\n    threeColumnContainerDiv,\n    firstColumnDiv,\n    secondColumnDiv,\n    thirdColumnDiv,\n  };\n};\n","import { getAllOptions, getAllOptionsBooleans } from '../utils/get-all-options';\nimport { setOptions } from '../utils/set-options';\nimport { IOptionsBooleans } from '../../options';\nimport { createThreeColumnContainer } from './create-three-column-container';\n\n/**\n * Function to create a binary switch with text for the two different states\n * and a callback used to set local-storage options\n * This switch is intended for the settings panel; you create it with the\n * text for the title of the switch (goes on left) and for the two different states.\n * The callback will be used to change the state of options\n */\n\nexport const createTitledSwitch = (\n  title: string,\n  onText: string,\n  offText: string,\n  key: keyof IOptionsBooleans,\n  cb = (_isChecked: boolean) => {}\n): HTMLDivElement => {\n  /**\n   * Construct and return wrapped switch of the following format\n   *\n   *\n    <div class=\"three-column-container\">\n      <div class=\"first-column\"> Title Text </div>\n      <div class=\"second-column\">\n        <label class=\"switch\">\n          <input type=\"checkbox\">\n          <span class=\"slider\"></span>\n        </label>\n      <div>\n      <div class=\"third-column\"> On/Off Text </div>\n    <div>\n   *\n   */\n\n  // Get handles on the container html for this switch\n  const {\n    threeColumnContainerDiv,\n    firstColumnDiv,\n    secondColumnDiv,\n    thirdColumnDiv,\n  } = createThreeColumnContainer();\n\n  const isChecked = getAllOptionsBooleans()[key];\n  firstColumnDiv.innerHTML = `<span>${title}</span>`;\n  thirdColumnDiv.innerHTML = `<span>${isChecked ? onText : offText}</span>`;\n\n  // Create the switch inner workings\n  // See: https://www.w3schools.com/howto/howto_css_switch.asp\n  const switchLabel = document.createElement('label');\n  switchLabel.classList.add('switch');\n  secondColumnDiv.append(switchLabel);\n\n  const switchInput = document.createElement('input');\n  switchInput.type = 'checkbox';\n  switchInput.checked = isChecked;\n  switchLabel.append(switchInput);\n\n  const sliderSpan = document.createElement('span');\n  sliderSpan.classList.add('slider');\n  switchLabel.append(sliderSpan);\n\n  // Add listener to toggle text upon switch clicks\n  switchInput.addEventListener('click', () => {\n    setTimeout(() => {\n      // Toggle state and display text\n      setOptions({ [key]: !getAllOptions()[key] });\n      const isChecked = switchInput.checked;\n      thirdColumnDiv.innerHTML = `${isChecked ? onText : offText}`;\n      // Run custom callback\n      cb(isChecked);\n    }, 0);\n  });\n\n  return threeColumnContainerDiv;\n};\n","import { setOptions } from '../utils/set-options';\nimport { getAllOptionsNumbers } from '../utils/get-all-options';\nimport { IOptionsNumbers } from '../../options';\nimport { createThreeColumnContainer } from './create-three-column-container';\n\n/**\n * To generate input fields to be placed neatly within the settings panel\n * like so:\n *\n    <div class=\"three-column-container\">\n      <div class=\"first-column\"> Title Text </div>\n      <div class=\"second-column\">\n          <input type=\"text\">\n      <div>\n      <div class=\"third-column\"> BLANK </div>\n    <div>\n *\n */\nexport const createTitledInput = (\n  title: string,\n  key: keyof IOptionsNumbers\n) => {\n  // --->>\n\n  // Create handles for container divs\n  const {\n    threeColumnContainerDiv,\n    firstColumnDiv,\n    secondColumnDiv,\n    thirdColumnDiv,\n  } = createThreeColumnContainer();\n\n  // Add title to first div\n  firstColumnDiv.innerHTML = `<span>${title}</span>`;\n\n  // Inject input field into second div\n  const inputField = document.createElement('input');\n  inputField.style.setProperty('min-width', '10px');\n  inputField.style.setProperty('max-width', '50px');\n  inputField.style.setProperty('min-height', '10px');\n  inputField.style.setProperty('height', '30px');\n  inputField.id = 'input-id-123';\n  inputField.value = getAllOptionsNumbers()[key] + '';\n  secondColumnDiv.append(inputField);\n\n  // Add listener to set input-field value on any change\n  inputField.oninput = () => {\n    setTimeout(() => {\n      try {\n        const numVal = parseInt(inputField.value);\n        setOptions({ [key]: numVal });\n      } catch (err) {\n        alert('Something went horribly wrong with your logic');\n      }\n    }, 0);\n  };\n\n  // Finish\n  return threeColumnContainerDiv;\n};\n","/**\n * Generates simple 'hr' div\n */\nexport function getHrDiv() {\n  const hrDiv = document.createElement('div');\n  hrDiv.style.setProperty('width', '100%');\n  hrDiv.style.setProperty('height', '1px');\n  hrDiv.style.setProperty('background-color', 'black');\n  return hrDiv;\n}\n","import { createTitledSwitch } from './create-titled-switch';\nimport { createTitledInput } from './create-titled-input';\nimport { getAllOptions } from '../utils/get-all-options';\nimport { getHrDiv } from './create-hr-div';\nimport { createThreeColumnContainer } from './create-three-column-container';\nimport { simpleUuid } from '../utils/simple-uuid';\n\n// Make some unique ids\nexport const settingsPanelIdX = 'settings-panel-id-' + simpleUuid();\nexport const maxObjectsContainerDivId =\n  'max-objects-container-div-id-' + simpleUuid();\nexport const thresholdHContainerDivId =\n  'threshold-H-container-div-id-' + simpleUuid();\n\n// Track state of panel open-closed\nlet isSettingsPanelDisplayed = false;\n\n/**\n * Create panel to hold all the buttons/fields that will control the widget's\n * local-storage-persisted state\n */\nexport const createSettingsPanel = () => {\n  // --->>\n\n  // Create container for the settings panel\n  const settingsPanelDiv = document.createElement('div');\n  settingsPanelDiv.id = settingsPanelIdX;\n  settingsPanelDiv.style.setProperty('position', 'absolute');\n  settingsPanelDiv.style.setProperty('top', '0px');\n  settingsPanelDiv.style.setProperty(\n    'right',\n    isSettingsPanelDisplayed ? '0%' : '100%'\n  );\n  settingsPanelDiv.style.setProperty('left', '0px');\n  settingsPanelDiv.style.setProperty('bottom', '0px');\n  settingsPanelDiv.style.setProperty('transition', 'right 1s ease-in-out');\n  settingsPanelDiv.style.setProperty('overflow', 'hidden');\n  settingsPanelDiv.style.setProperty('font-family', '\"Odibee Sans\", cursive');\n  settingsPanelDiv.style.setProperty('font-size', '22px');\n  settingsPanelDiv.style.setProperty(\n    'background-color',\n    'rgba(255,255,255,0.9)'\n  );\n  const isDark = false;\n  if (isDark)\n    settingsPanelDiv.style.setProperty('background-color', 'rgba(0,0,0,0.9)');\n  settingsPanelDiv.style.setProperty('color', 'black');\n  if (isDark) settingsPanelDiv.style.setProperty('color', 'white');\n  settingsPanelDiv.style.setProperty('display', 'flex');\n  settingsPanelDiv.style.setProperty('flex-direction', 'column');\n  settingsPanelDiv.style.setProperty('gap', '5px');\n  settingsPanelDiv.style.setProperty('justify-content', 'start');\n  settingsPanelDiv.style.setProperty('align-items', 'center');\n\n  // Create callback to toggle settings panel open-closed\n  const toggleSettingsPanelCb = () => {\n    isSettingsPanelDisplayed = !isSettingsPanelDisplayed;\n    settingsPanelDiv.style.setProperty(\n      'right',\n      isSettingsPanelDisplayed ? '0%' : '100%'\n    );\n  };\n\n  // Heading\n  const {\n    threeColumnContainerDiv,\n    secondColumnDiv,\n  } = createThreeColumnContainer();\n  secondColumnDiv.innerHTML = '<h1>Settings</h1>';\n  threeColumnContainerDiv.style.setProperty('height', '100px');\n  settingsPanelDiv.append(threeColumnContainerDiv);\n\n  // Planet-loading switch\n  settingsPanelDiv.append(getHrDiv());\n  const planetLoadingModeSwitchContainerDiv = createTitledSwitch(\n    'Planet loading mode?',\n    'Load planets before animation begins',\n    'Begin animation then load planets',\n    '__sbnViewer__isPlanetsLoadedBeforeAnimationBegins'\n  );\n  settingsPanelDiv.append(planetLoadingModeSwitchContainerDiv);\n  // const hrDiv = document.createElement('div');\n  // hrDiv.style.setProperty('width', '100%');\n  // hrDiv.style.setProperty('height', '1px');\n  // hrDiv.style.setProperty('background-color', 'black');\n  settingsPanelDiv.append(getHrDiv());\n\n  // Comet-asteroid loading mode switch\n  const cometAsteroidLoadingModeSwitchContainerDiv = createTitledSwitch(\n    'Comet-Asteroid Loading Mode?',\n    'Start animation then load comets-asteroids',\n    'Wait for comets-asteroids before starting animation',\n    '__sbnViewer__isBeltLoadedBeforeAnimationBegins'\n  );\n  settingsPanelDiv.append(cometAsteroidLoadingModeSwitchContainerDiv);\n  settingsPanelDiv.append(getHrDiv());\n\n  // Abundance-mode switch\n  const abundanceRepresentationModeSwitchContainerDiv = createTitledSwitch(\n    'Comet-Asteroid Abundance Mode?',\n    'Toy Model',\n    'Real World Proportions',\n    '__sbnViewer__isBeltAbundanceToyModel',\n    (isChecked: boolean) => {\n      // --->>\n\n      const maxObjectsContainerDiv = document.getElementById(\n        maxObjectsContainerDivId\n      );\n      if (!!maxObjectsContainerDiv) {\n        maxObjectsContainerDiv.style.setProperty(\n          'display',\n          isChecked ? 'none' : 'flex'\n        );\n      }\n\n      const thresholdHContainerDiv = document.getElementById(\n        thresholdHContainerDivId\n      );\n      if (!!thresholdHContainerDiv) {\n        thresholdHContainerDiv.style.setProperty(\n          'display',\n          isChecked ? 'none' : 'flex'\n        );\n      }\n    }\n  );\n  settingsPanelDiv.append(abundanceRepresentationModeSwitchContainerDiv);\n\n  const isChecked = getAllOptions()['__sbnViewer__isBeltAbundanceToyModel'];\n\n  // Add max objects field\n  const maxObjectsContainerDiv = createTitledInput(\n    'Max number of objects',\n    '__sbnViewer__beltAbundanceMaxObjects'\n  );\n  maxObjectsContainerDiv.style.setProperty(\n    'display',\n    isChecked ? 'none' : 'flex'\n  );\n  maxObjectsContainerDiv.id = maxObjectsContainerDivId;\n  settingsPanelDiv.append(maxObjectsContainerDiv);\n\n  // Add threshold H field\n  const thresholdHContainerDiv = createTitledInput(\n    'Minimum H Mag',\n    '__sbnViewer__beltAbundanceHThreshold'\n  );\n  thresholdHContainerDiv.id = thresholdHContainerDivId;\n  thresholdHContainerDiv.style.setProperty(\n    'display',\n    isChecked ? 'none' : 'flex'\n  );\n  settingsPanelDiv.append(thresholdHContainerDiv);\n  settingsPanelDiv.append(getHrDiv());\n\n  // Return assets having created them\n  return {\n    toggleSettingsPanelCb,\n    settingsPanelDiv,\n  };\n};\n","import { SceneManager } from './threejs/scene-manager';\nimport { addGlobalProperties } from './threejs/utils/add-global-properties';\n\nlet threejsScene: SceneManager;\nexport let initDate = new Date();\nexport const setInitDate = (date: Date) => (initDate = date);\nexport const getInitDate = () => initDate;\n\n/**\n * Create threeJs canvas and inject into container\n */\nexport function init(containerId = 'sbn-solar-system-viewer-id') {\n  // --->>\n\n  // Add threeJs, stuff in the head, etc.\n  addGlobalProperties()\n\n    .then(_ => {\n      // Get div to contain canvas\n      const canvasContainer = document.getElementById(containerId);\n      if (!canvasContainer) {\n        throw new Error(\"Can't find div of id \" + containerId);\n      }\n      threejsScene = new SceneManager(containerId);\n      threejsScene.init();\n    })\n    .catch(_ => {\n      console.log('Error loading stuff');\n      console.log(_);\n    });\n}\n\n/**\n * Loads and runs stats.min.js to display FPS, etc.\n */\nfunction displayFpsStats() {\n  const script = document.createElement('script');\n  script.onload = () => {\n    // @ts-ignore\n    const stats = new Stats();\n    document.body.appendChild(stats.dom);\n    requestAnimationFrame(function loop() {\n      stats.update();\n      requestAnimationFrame(loop);\n    });\n  };\n  script.src =\n    'https://sbn-solar-system-viewer.s3.amazonaws.com/scripts/stats.min.js';\n  document.head.appendChild(script);\n}\n// if (process.env.NODE_ENV === 'development') displayFpsStats();\n\n/**\n * Add 'destroy' feature to UMD\n */\nexport function destroy() {\n  threejsScene.destroy();\n}\n\n/**\n * Kick things off in dev mode\n */\nif (process.env.NODE_ENV === 'development') {\n  window.onload = () => {\n    init();\n  };\n}\n\n","import * as THREE from 'three';\n\nimport { AbstractSceneManager } from './abstract-scene/abstract-scene-manager';\nimport { Sun } from './scene-entities/sun';\nimport { Planet } from './scene-entities/planet';\nimport { StarField } from './scene-entities/star-field';\nimport { auToMeters } from './utils/conversions';\nimport { MiscHelpers } from './scene-entities/misc-helpers';\nimport { SimpleLight } from './scene-entities/simple-light';\nimport { Asteroid } from './scene-entities/asteroid';\nimport { PointLight } from './scene-entities/point-light';\nimport { solarSystemData } from './data/basic-solar-system-data';\nimport { createSearchField } from './html/create-search-field';\nimport { IZoomable } from './models/IZoomable';\nimport { updateTraversalFraction } from './utils/update-traversal-fraction';\nimport { updateCameraPosition } from './utils/update-camera-position';\nimport { updateCameraViewingAngle } from './utils/update-camera-viewing-angle';\nimport { AbstractToyModel } from './abstract-scene/abstract-toy-model';\nimport { IZoomableOrbital } from './models/IZoomableOrbital';\nimport { BirdsEye } from './scene-entities/birds-eye';\nimport { getDestinationLookPosition } from './utils/get-destination-look-position';\nimport { AsteroidBelt } from './scene-entities/asteroid-belt';\nimport { myprint } from './utils/myprint';\nimport { createHtmlButtonRow } from './html/create-html-button-row';\nimport { createDisplayMessageDiv } from './html/create-display-message-div';\nimport { createSettingsButton } from './html/create-settings-button';\nimport { createSettingsPanel } from './html/create-settings-panel';\n\n/**\n * Implement a scene for this app with 'real' scene entities\n */\nexport class SceneManager extends AbstractSceneManager {\n  // --->>>\n\n  // User-changeable settings\n  // private abundanceRepresentationMode: EAbundanceRepresentationMode =\n  // EAbundanceRepresentationMode.TOY_REPRESENTATION;\n  // private loadMode: ELoadMode = ELoadMode.BEFORE_ANIMATION;\n\n  // Toy-scalable bodies\n  private sun = new Sun();\n  private planets: Planet[];\n  private asteroids: Asteroid[];\n  // private asteroidBelts: AsteroidBelt[];\n  private birdsEyes: BirdsEye[];\n\n  private starField?: StarField;\n  private isToyScale = true;\n  private isOrbitsVisible = true;\n  private isLogScale = !false;\n  private toyScalables: AbstractToyModel[];\n  private logScalables: AbstractToyModel[] = [];\n\n  // Zooming logic\n  private zoomables: IZoomable[] = [];\n  private zoomableOrbitals: IZoomableOrbital[] = [];\n  private zoomTarget: IZoomable = this.sun;\n  private isZoomingPosition = false;\n  private isZoomingAngle = false;\n  private zoomTraversalFraction = 0;\n  private zoomClock = new THREE.Clock(); //Controls movement of camera when touring planets\n  private isScenePaused = false;\n\n  public updateDisplayedMessage: (\n    msg: string\n  ) => void = () => {\n    console.log('denied!');\n  };\n\n  constructor(containerId: string) {\n    // --->>>\n\n    super(containerId);\n\n    // Add html\n    // Message Display\n    const {\n      displayMessageDiv,\n      updateMessageCb,\n    } = createDisplayMessageDiv();\n    this._container.append(displayMessageDiv);\n    this.updateDisplayedMessage = updateMessageCb;\n    this.updateDisplayedMessage('Loading...');\n    // Search field\n    this._container.append(\n      createSearchField(this.tryToStartZooming)\n    );\n    // Buttons in main display\n    this._container.append(\n      createHtmlButtonRow([\n        {\n          label: 'Toggle Toy Scale',\n          cb: this.toggleIsToyScale,\n        },\n        {\n          label: 'Toggle helpers',\n          cb: this.toggleHelpersVisibility,\n        },\n        {\n          label: 'Toggle Orbits',\n          cb: this.toggleIsOrbitsVisible,\n        },\n        {\n          label: 'Toggle Log Scale',\n          cb: this.toggleIsLogScale,\n        },\n        {\n          label: 'Toggle Asteroids',\n          cb: this.toggleAsteroids,\n        },\n      ])\n    );\n    // Settings panel and button\n    const {\n      settingsPanelDiv,\n      toggleSettingsPanelCb,\n    } = createSettingsPanel();\n    this._container.append(settingsPanelDiv);\n    const settingsButton = createSettingsButton(\n      toggleSettingsPanelCb\n    );\n    this._container.append(settingsButton);\n\n    // Entities\n    this.birdsEyes = [\n      new BirdsEye(),\n      new BirdsEye('BIRDSEYELOG', 5),\n    ];\n    this.planets = [\n      new Planet('MERCURY'),\n      new Planet('VENUS'),\n      new Planet('EARTH'),\n      new Planet('MARS'),\n      new Planet('CERES'),\n      new Planet('JUPITER'),\n      new Planet('SATURN'),\n      new Planet('URANUS'),\n      new Planet('NEPTUNE'),\n      // new Planet('PLUTO'),\n      // new Planet('HAUMEA'),\n      // new Planet('MAKEMAKE'), // JPL says 'out of bounds' -- ignoring for now\n      // new Planet('ERIS'),\n    ];\n    this.asteroids = [\n      //\n      new Asteroid('65P'),\n    ];\n\n    if (false)\n      // this.asteroidBelts = [\n      //   new AsteroidBelt(\n      //     [\n      //       //\n      //       'DISTANTOBJECT',\n      //       'MBA',\n      //       'NEO1KM',\n      //       'PHA',\n      //       'C',\n      //       // 'P',\n      //       // 'A',\n      //     ],\n      //     this\n      //   ),\n      // ];\n      this.starField = new StarField(auToMeters(999));\n    this.zoomables = [\n      ...this.planets,\n      ...this.asteroids,\n      ...this.birdsEyes,\n      this.sun,\n    ];\n    this.zoomableOrbitals = [\n      ...this.planets,\n      ...this.asteroids,\n    ];\n    this.toyScalables = [\n      ...this.planets,\n      ...this.asteroids,\n      // ...this.asteroidBelts,\n      this.sun,\n    ];\n    this.logScalables = [\n      ...this.planets,\n      ...this.asteroids,\n      // ...this.asteroidBelts,\n    ];\n\n    myprint('Begin registering entities');\n    this.registerSceneEntities([\n      // this.starField,\n      new MiscHelpers(),\n      new SimpleLight(0.4),\n      new PointLight(5, solarSystemData.SUN.radiusMeters),\n      ...this.planets,\n      ...this.asteroids,\n      // ...this.asteroidBelts,\n      /** Sun MUST come last due to its sprite-blending quirks **/\n      this.sun,\n    ]);\n    myprint('Finish registering entities');\n\n    // Logic to run before scene initialization\n    this._preInitHook = () => {\n      const radius = auToMeters(4);\n      // const radius = auToMeters(100); // See all planets\n      this._initialViewingVector = new THREE.Vector3(\n        0,\n        0,\n        radius\n      );\n    };\n\n    // Logic to run after scene initialization\n    this._postInitHook = () => {\n      // Misc\n      this._controls!.maxDistance = auToMeters(100);\n      this.setHelpersVisibility(!true);\n      //\n      this._camera.position.set(\n        // Earth\n        // -180595912325.3482,\n        // 34587914945.44637,\n        // 3906449321.9052143\n        // Haumea\n        // -4514678652999.103,\n        // -996799575287.2986,\n        // 1431642047889.7205\n        // Over Jupiter's Shoulder\n        // 349450170005.93274,\n        // 1508896562129.965,\n        // 622420704159.6792\n        // 65P\n        35426284497.8745,\n        -725267146538.4939,\n        -111665855099.58893\n      );\n    };\n\n    // Temp\n    // setTimeout(() => this.tryToStartZooming('CERES'), 500);\n    setTimeout(() => {\n      this.setIsToyScale(true);\n      this.tryToStartZooming('BIRDSEYE');\n      this.setIsLogScale(true);\n    }, 3500);\n    this._camera.up.set(1, 1, 1);\n\n    // Clean up on instance destruction\n    this._destroyHook = () => {};\n  }\n\n  setIsToyScale = (isToyScale: boolean) => {\n    this.isToyScale = !!isToyScale;\n    this.toyScalables.forEach(_ =>\n      _.setIsZoomToToyScale(this.isToyScale)\n    );\n  };\n\n  toggleIsToyScale = () => {\n    this.isToyScale = !this.isToyScale;\n    this.setIsToyScale(this.isToyScale);\n  };\n\n  setIsOrbitsVisible = (isOrbitsVisible: boolean) => {\n    this.isOrbitsVisible = !!isOrbitsVisible;\n    this.zoomableOrbitals.forEach(\n      _ =>\n        _ instanceof Asteroid ||\n        _.setIsOrbitVisible(this.isOrbitsVisible)\n    );\n  };\n\n  toggleIsOrbitsVisible = () => {\n    this.isOrbitsVisible = !this.isOrbitsVisible;\n    this.setIsOrbitsVisible(this.isOrbitsVisible);\n  };\n\n  toggleAsteroids = () => {\n    // this.asteroidBelts.forEach(asteroidBelt =>\n    //   asteroidBelt.toggleIsBeltVisible()\n    // );\n  };\n\n  setIsLogScale = (isLogScale: boolean) => {\n    this.isLogScale = !!isLogScale;\n    this.logScalables.forEach(el => el.toggleIsLogScale());\n    this.tryToStartZooming(\n      this.isLogScale ? 'BIRDSEYELOG' : 'BIRDSEYE'\n    );\n  };\n\n  toggleIsLogScale = () => {\n    this.isLogScale = !this.isLogScale;\n    this.setIsLogScale(this.isLogScale);\n  };\n\n  tryToStartZooming = (text: string) => {\n    const TEXT = text.toUpperCase();\n    const foundTarget = this.zoomables.find(\n      el => el.NAME === TEXT\n    );\n    if (foundTarget) {\n      this.isZoomingPosition = true;\n      this.isZoomingAngle = true;\n      this.zoomTarget = foundTarget;\n      this.zoomClock = new THREE.Clock(true);\n      this._controls.enabled = true;\n    }\n  };\n\n  tryToStopZooming = () => {\n    if (!this.isZoomingAngle && !this.isZoomingPosition) {\n      this._controls.target =\n        this.zoomTarget instanceof BirdsEye\n          ? new THREE.Vector3(0, 0, 0)\n          : this.zoomTarget.getPosition();\n      this._controls.enabled = true;\n    }\n  };\n\n  setIsScenePaused(val: boolean) {\n    this.isScenePaused = val;\n    if (this.isScenePaused) {\n      this._clock.stop();\n      this.setIsLoaderDivVisible(true, 0);\n    } else {\n      this._clock.start();\n      this.setIsLoaderDivVisible(false, 0);\n    }\n  }\n\n  updateCamera = () => {\n    //\n\n    const t = this._clock.getElapsedTime();\n\n    // Zooming logic\n    if (this.isZoomingPosition || this.isZoomingAngle) {\n      this.zoomTraversalFraction = updateTraversalFraction(\n        this.zoomClock\n      );\n      if (this.isZoomingPosition) {\n        this.isZoomingPosition = updateCameraPosition(\n          this._camera,\n          this.zoomTarget,\n          this.zoomTraversalFraction\n        );\n      }\n      if (this.isZoomingAngle) {\n        this.isZoomingAngle = updateCameraViewingAngle(\n          this._camera,\n          this.zoomTarget,\n          this.zoomTraversalFraction\n        );\n      } else {\n        // Keep looking at target even if position is still updating\n        const { x, y, z } = getDestinationLookPosition(\n          this.zoomTarget\n        );\n        this._camera.lookAt(x, y, z);\n        // this._camera.up.set(1, 1, 1);\n        // console.log('0 >>>>', this._camera.up, this._camera.position);\n      }\n      this.tryToStopZooming();\n    } else {\n      // Orbit controls only update when NOT zooming\n      this._controls.update();\n      {\n        // const p = this._camera.position;\n        // this._camera.position.multiplyScalar(1 + 0.01 * Math.sin(t));\n      }\n    }\n\n    // Debug\n    if (\n      !true &&\n      Math.random() < 0.1 &&\n      this._clock.elapsedTime < 50\n    ) {\n      console.log(this._camera.position);\n      console.log('>>> ', this._sceneEntities);\n    }\n  };\n}\n","import * as THREE from 'three';\n\nconst alpha = 1 / 100;\nconst beta = 3.0;\n\n/**\n * Function at the heart of the smooth-zoom functionality.\n * It only requires two parameters to enable smooth movement between\n * a vast range of distances. By starting off with really small steps\n * (parameterised by alpha), you ensure that the movement starts off slow.\n * By increasing exponentially, you ensure that no matter how far the object,\n * it will soon start gobbling up the traversal vector. Because that traversal\n * vector decreases in size with each step, it also ensures the arrival is not too\n * abrupt.\n */\nexport const updateTraversalFraction = (clock: THREE.Clock) => {\n  const searchTimeElapsed = clock.getElapsedTime();\n  // let fraction: number = Math.pow(searchTimeElapsed, beta) * alpha;\n  let fraction: number =\n    searchTimeElapsed * searchTimeElapsed * searchTimeElapsed * alpha;\n  if (fraction < 0.0) fraction = 0.0;\n  if (fraction > 1.0) fraction = 1.0;\n  return fraction;\n};\n","import * as THREE from 'three';\n\nfunction vectorBetweenTwoVector3s(v1: THREE.Vector3, v2: THREE.Vector3) {\n  return new THREE.Vector3(v2.x - v1.x, v2.y - v1.y, v2.z - v1.z);\n}\n\nexport function distanceBetweenTwoVector3s(\n  v1: THREE.Vector3,\n  v2: THREE.Vector3\n): number {\n  return vectorBetweenTwoVector3s(v1, v2).length();\n}\n","import * as THREE from 'three';\nimport { IZoomable } from '../models/IZoomable';\nimport { distanceBetweenTwoVector3s } from './threejs-geometry-functions';\nimport { getDestinationCameraPosition } from './get-destination-camera-position';\nimport { au } from './constants';\n\n/**\n * Function to compute the next position for a camera given a zoomable target\n * (e.g. a planet), the camera, and a 'traversal' fraction that parameterizes\n * how fast to move toward that target\n */\nexport const updateCameraPosition = (\n  camera: THREE.Camera,\n  zoomTarget: IZoomable,\n  zoomTraversalFraction: number\n) => {\n  // Determine where you want to end up\n  const { x, y, z } = getDestinationCameraPosition(zoomTarget);\n\n  // Get vector between present and destination positions\n  // This is the vector \"to-be-fractionally-traversed\"\n  const cp = camera.position;\n  const relativeDestinationCameraVector = new THREE.Vector3(\n    x - cp.x,\n    y - cp.y,\n    z - cp.z\n  );\n\n  // Traverse the camera some fraction along said vector\n  let newCameraPosition: THREE.Vector3 = new THREE.Vector3(\n    cp.x + relativeDestinationCameraVector.x * zoomTraversalFraction,\n    cp.y + relativeDestinationCameraVector.y * zoomTraversalFraction,\n    cp.z + relativeDestinationCameraVector.z * zoomTraversalFraction\n  );\n\n  // Return signal to stop/continue\n  let isZoomingPosition = true;\n\n  // Decide whether to stop searching and instead lock onto destinationCameraPosition\n  const separation = distanceBetweenTwoVector3s(\n    newCameraPosition,\n    new THREE.Vector3(x, y, z)\n  );\n  const smallThresholdSeparation = 0.0001 * au;\n  if (separation < smallThresholdSeparation) {\n    isZoomingPosition = false;\n    newCameraPosition = new THREE.Vector3(x, y, z);\n  }\n\n  //Finally, update computed new camera position\n  camera.position.set(\n    newCameraPosition.x,\n    newCameraPosition.y,\n    newCameraPosition.z\n  );\n\n  return isZoomingPosition;\n};\n","import * as THREE from 'three';\nimport { IZoomable } from '../models/IZoomable';\nimport { BirdsEye } from '../scene-entities/birds-eye';\n\n/**\n * By providing a zoomable target, this function will compute a 'scenic'\n * position that will be used by other functions to move the camera.\n */\nexport const getDestinationCameraPosition = (zoomTarget: IZoomable) => {\n  const scale = zoomTarget.getScale();\n  const radius = zoomTarget.getRadius();\n\n  if (zoomTarget.NAME === 'SUN') {\n    // Position around sun is arbitrary\n    const { x, y, z } = zoomTarget.getPosition();\n    return new THREE.Vector3(x + 3 * radius * scale, y + 3 * radius * scale, z);\n  }\n\n  if (zoomTarget instanceof BirdsEye) {\n    return zoomTarget.getPosition();\n  }\n\n  // Logic to find 'scenic' destination with sun in view in the distance\n  // to the side of target based on some back-of-envelope high-school geometry\n  const X = zoomTarget.getPosition().clone();\n  const r = 2 * radius * scale;\n  const sinAlpha = r / X.length();\n  const alpha = Math.asin(sinAlpha);\n  X.applyAxisAngle(new THREE.Vector3(0, 0, 1), alpha);\n  const lengthenFactor = (X.length() + 4 * radius * scale) / X.length();\n  X.multiplyScalar(lengthenFactor);\n  return X;\n};\n","import * as THREE from 'three';\nimport { IZoomable } from '../models/IZoomable';\nimport { BirdsEye } from '../scene-entities/birds-eye';\nimport { getDestinationLookPosition } from './get-destination-look-position';\n\n/**\n * By providing a zoomable target, your camera, and a 'traversal fraction',\n * this function will compute the next modification in viewing direction for\n * the camera in order to pan towards the target\n */\nexport const updateCameraViewingAngle = (\n  camera: THREE.Camera,\n  zoomTarget: IZoomable,\n  zoomTraversalFraction: number\n) => {\n  // Get vector from where you are to where you want to look\n  const camPos = camera.position;\n  const destinationLookPosition = getDestinationLookPosition(zoomTarget);\n  const destinationLookVector = new THREE.Vector3(\n    destinationLookPosition.x - camPos.x,\n    destinationLookPosition.y - camPos.y,\n    destinationLookPosition.z - camPos.z\n  );\n\n  // Get unitary vector of direction camera is presently pointing\n  const presentLookVector = camera.getWorldDirection(new THREE.Vector3());\n\n  // In order for the change in viewing angle to feel like it matches\n  // the change in position, we need to multiply the unitary vector to\n  // be on the same order of size as the destinationLookVector\n  presentLookVector.multiplyScalar(destinationLookVector.length());\n\n  // Use these two vectors to compute the vector \"to-be-fractionally-traversed\"\n  // N.b. you might need to sketch a diagram to understand why this works\n  const relativeDestinationLookVector: THREE.Vector3 = new THREE.Vector3(\n    destinationLookVector.x - presentLookVector.x,\n    destinationLookVector.y - presentLookVector.y,\n    destinationLookVector.z - presentLookVector.z\n  );\n\n  // Fractionally traverse said vector\n  let newLookPosition: THREE.Vector3 = new THREE.Vector3(\n    camera.position.x +\n      presentLookVector.x +\n      relativeDestinationLookVector.x * zoomTraversalFraction,\n    camera.position.y +\n      presentLookVector.y +\n      relativeDestinationLookVector.y * zoomTraversalFraction,\n    camera.position.z +\n      presentLookVector.z +\n      relativeDestinationLookVector.z * zoomTraversalFraction\n  );\n\n  // Signal whether to stop/continue\n  let isZoomingAngle = true;\n\n  // Decide whether to stop searching and visually lock onto destinationLookPosition\n  const smallThresholdAngle = 0.0025;\n  const theta = destinationLookVector.angleTo(presentLookVector);\n  if (theta < smallThresholdAngle) {\n    isZoomingAngle = false;\n    newLookPosition = destinationLookPosition;\n  }\n\n  //Finally, update computed new viewing and camera position\n  camera.lookAt(newLookPosition.x, newLookPosition.y, newLookPosition.z);\n\n  return isZoomingAngle;\n};\n","import { buttonFontFamily } from '../utils/constants';\n\n/**\n *\n */\nexport const createSearchField = (onEnter: (value: string) => void) => {\n  // --->>\n\n  const div = document.createElement('div');\n  const input = document.createElement('input');\n\n  div.style.setProperty('position', 'absolute');\n  div.style.setProperty('top', '10px');\n  div.style.setProperty('left', '10px');\n  div.style.setProperty('width', '120px');\n  div.style.setProperty('height', '40px');\n  div.style.setProperty('background-color', 'green');\n\n  //\n  input.value = 'Earth';\n  input.style.setProperty('width', '100%');\n  input.style.setProperty('height', '100%');\n  input.style.setProperty('font-size', '20px');\n  input.style.setProperty('font-family', buttonFontFamily);\n  input.style.setProperty('font-size', '20px');\n  input.classList.add('sbn-solar-system-viewer-input');\n  input.addEventListener('keypress', e => {\n    if (e.key === 'Enter') {\n      onEnter(input.value);\n    }\n  });\n  div.append(input);\n\n  // Finish\n  return div;\n};\n","/**\n * Create div in which messages will be displayed\n */\nexport function createDisplayMessageDiv() {\n  // --->>\n\n  const displayMessageDiv = document.createElement('div');\n  displayMessageDiv.id = 'message-field';\n\n  displayMessageDiv.style.setProperty('position', 'absolute');\n  displayMessageDiv.style.setProperty('left', '0%');\n  displayMessageDiv.style.setProperty('right', '0px');\n  displayMessageDiv.style.setProperty('bottom', '0px');\n  displayMessageDiv.style.setProperty('height', '40px');\n  displayMessageDiv.style.setProperty('display', 'flex');\n  displayMessageDiv.style.setProperty('justify-content', 'flex-end');\n  displayMessageDiv.style.setProperty('align-items', 'center');\n  displayMessageDiv.style.setProperty('padding-right', '10px');\n  displayMessageDiv.style.setProperty(\n    'background-color',\n    'rgba(255,255,255,0.1)'\n  );\n  displayMessageDiv.style.setProperty('color', 'white');\n\n  const updateMessageCb = (msg: string) => {\n    displayMessageDiv.innerHTML = msg;\n  };\n\n  return { displayMessageDiv, updateMessageCb };\n}\n","import { injectCommonButtonProperties } from './inject-common-button-properties';\n\n/**\n *\n */\nexport const createHtmlButtonRow = (\n  buttonInputs: {\n    cb: () => any;\n    label: string;\n  }[]\n) => {\n  // --->>\n\n  // Warning\n  // if (!container) throw new Error('Canvas Container is Falsy!');\n\n  // Create wrapper container\n  const buttonWrapperDiv = document.createElement('div');\n  buttonWrapperDiv.style.setProperty('display', 'flex');\n  buttonWrapperDiv.style.setProperty('flex-direction', 'column');\n  buttonWrapperDiv.style.setProperty('gap', '12px');\n  buttonWrapperDiv.style.setProperty('position', 'absolute');\n  buttonWrapperDiv.style.setProperty('top', '100px');\n  buttonWrapperDiv.style.setProperty('bottom', '100px');\n  buttonWrapperDiv.style.setProperty('right', '0px');\n  buttonWrapperDiv.style.setProperty('width', '120px');\n  // container.append(buttonWrapperDiv);\n\n  // Map inputs to stylized buttons\n  const buttonDivs = buttonInputs.map(buttonInput => {\n    // Set properties unique to this button\n    const buttonDiv = document.createElement('div');\n    buttonDiv.innerText = buttonInput.label;\n    buttonDiv.style.setProperty('display', 'flex');\n    buttonDiv.style.setProperty('flex', '1');\n    buttonDiv.style.setProperty('justify-content', 'center');\n    buttonDiv.style.setProperty('align-items', 'center');\n    return injectCommonButtonProperties(buttonDiv, buttonInput.cb);\n  });\n\n  // Add buttons to wrapper in original order\n  buttonDivs.forEach(buttonDiv => {\n    buttonWrapperDiv.append(buttonDiv);\n  });\n\n  buttonWrapperDiv.id = 'buttons-wrapper';\n\n  return buttonWrapperDiv;\n};\n","import {\n  buttonBackgroundColor,\n  buttonClickedBackgroundColor,\n  buttonFontFamily,\n  buttonTextColor,\n  buttonPadding,\n  buttonCursorType,\n  buttonFadeInSpecs,\n} from '../utils/constants';\n\n/**\n * Function to mutate buttons by injecting them with properties\n * common to all html buttons; append to container when ready\n */\nexport const injectCommonButtonProperties = (\n  button: HTMLElement,\n  onClickCB: () => void\n): HTMLElement => {\n  // --->>\n\n  // Callback to mutate button\n  // Positioning\n  // button.style.position = 'absolute';\n  // button.style.setProperty('padding', buttonPadding);\n\n  // Colors\n  button.style.setProperty('color', buttonTextColor);\n  button.style.setProperty('background-color', buttonBackgroundColor);\n\n  // Font stuff\n  button.style.setProperty('font-family', buttonFontFamily);\n  button.style.setProperty('font-size', '20px');\n\n  // Setup fade-in effect\n  button.style.setProperty(\n    'animation',\n    `sbn-solar-system-viewer-fade-in ${buttonFadeInSpecs}`\n  );\n\n  // Cursor behavior\n  // Prevent text in button from being selectable\n  // See here: https://stackoverflow.com/a/4407335/8620332\n  button.style.setProperty('cursor', buttonCursorType);\n  button.style.setProperty('-webkit-touch-callout', 'none');\n  button.style.setProperty('-webkit-user-select', 'none');\n  button.style.setProperty('-khtml-user-select', 'none');\n  button.style.setProperty('-moz-user-select', 'none');\n  button.style.setProperty('-ms-user-select', 'none');\n  button.style.setProperty('user-select', 'none');\n\n  // Properties related to click effect\n  button.style.setProperty('transition', 'background-color 50ms ease-in-out');\n  button.addEventListener('click', function() {\n    button.style.setProperty('background-color', buttonClickedBackgroundColor);\n    setTimeout(() => {\n      button.style.setProperty('background-color', buttonBackgroundColor);\n      onClickCB();\n    }, 200);\n  });\n\n  return button;\n};\n","import { createGoogleIcon } from './create-google-icon';\n\n/**\n * Adds settings button to top-right of UI\n */\nexport const createSettingsButton = (toggleSettingsPanelCb: () => void) => {\n  // --->>>\n\n  // Create button container\n  const settingsSizePxls = 70;\n  const settingsButtonDiv = document.createElement('div');\n  settingsButtonDiv.style.setProperty('position', 'absolute');\n  settingsButtonDiv.style.setProperty('top', '0px');\n  settingsButtonDiv.style.setProperty('right', '0px');\n  settingsButtonDiv.style.setProperty('height', `${settingsSizePxls}px`);\n  settingsButtonDiv.style.setProperty('width', `${settingsSizePxls}px`);\n  settingsButtonDiv.style.setProperty('display', 'flex');\n  settingsButtonDiv.style.setProperty('justify-content', 'center');\n  settingsButtonDiv.style.setProperty('align-items', 'center');\n  settingsButtonDiv.style.setProperty('z-index', '2');\n  // svgWrapperDiv.style.setProperty('background-color', 'pink');\n\n  // Add icon to button\n  settingsButtonDiv.append(\n    createGoogleIcon('settings', { color: 'white', sizePxls: 50 })\n  );\n\n  /*   getReactIconSvg('IoIosSettings', {\n    fillColor: 'white',\n    size: settingsSizePxls,\n  }); */\n\n  // Add listener\n  settingsButtonDiv.addEventListener('click', toggleSettingsPanelCb);\n\n  // Finish\n  return settingsButtonDiv;\n};\n","type TLabel = 'settings';\ninterface IIconOptions {\n  sizePxls: number;\n  color: string;\n  isOutlined: boolean;\n}\n\n/**\n * Generates simple google icon span of the form:\n *\n  <span class=\"material-icons[-outlined]\">\n    [label]\n  </span>\n *\n */\nexport function createGoogleIcon(\n  label: TLabel,\n  options?: Partial<IIconOptions>\n) {\n  const { sizePxls, isOutlined, color } = {\n    // Default vals\n    sizePxls: 18,\n    color: 'black',\n    isOutlined: false,\n    // Passed vals\n    ...options,\n  };\n  const iconSpan = document.createElement('span');\n  iconSpan.innerHTML = `${label}`;\n  iconSpan.classList.add(\n    isOutlined ? 'material-icons-outlined' : 'material-icons'\n  );\n  iconSpan.style.setProperty('font-size', sizePxls + 'px');\n  iconSpan.style.setProperty('color', color);\n  iconSpan.style.setProperty('cursor', 'pointer');\n  return iconSpan;\n}\n","/**\n * Function to inject link into header for google font\n * We use a dictionary to track the fonts we've added so\n * we don't needlessly add it more than once\n *\n * The fontName is everything passed after the base url:\n * https://fonts.googleapis.com/\n *\n * E.g. to load:\n * https://fonts.googleapis.com/icon?family=Material+Icons\n *\n * ... you need a fontName of 'icon?family=Material+Icons'\n */\n\nconst fontsAdded: string[] = [];\n\nexport const addGoogleFont = (fontName: string) => {\n  // --->>>\n\n  if (fontsAdded.includes(fontName)) return;\n  fontsAdded.push(fontName);\n\n  const newLink = document.createElement('link');\n  newLink.rel = 'stylesheet';\n  newLink.href = `https://fonts.googleapis.com/${fontName}`;\n  document.head.append(newLink);\n};\n","import { addGoogleFont } from './add-google-font';\n\nlet isGlobalStylesSet = false;\n\n/**\n * Function to inject global styles into the document head\n * Make sure to prefix all of your global class names, etc. with\n * something unique to this widget to avoid clashes\n * E.g. sbn-solar-system-viewer-\n */\nexport const addGlobalStyles = () => {\n  // --->>\n\n  // Only run this function once\n  if (isGlobalStylesSet) return;\n  isGlobalStylesSet = true;\n\n  // Some params\n  const switchOnColor = 'red';\n  const switchOffColor = 'blue';\n\n  // Create style element\n  const globalStyle = document.createElement('style');\n  globalStyle.innerHTML = `\n    @keyframes sbn-solar-system-viewer-fade-in {\n      from { opacity: 0; }\n      to   { opacity: 1; }\n    }\n\n    @keyframes sbn-solar-system-viewer-loader-spin {\n      0% { transform: rotate(0deg); }\n      100% { transform: rotate(360deg); }\n    }\n\n    .sbn-solar-system-viewer-input:focus{\n        outline-width: 0;\n    }\n\n    /**\n     *\n     * This is for styling the switches\n     *\n     */\n    .three-column-container {\n      width: 100%;\n      height: 34px;\n      display: flex;\n      white-space: nowrap;\n    }\n\n    .three-column-container .switch {\n      position: relative;\n      display: inline-block;\n      width: 60px;\n      height: 34px;\n    }\n\n    /* Hide default HTML checkbox */\n    .three-column-container .switch input {\n      opacity: 0;\n      width: 0;\n      height: 0;\n    }\n\n    /* The slider */\n    .three-column-container .slider {\n      position: absolute;\n      cursor: pointer;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background-color: #ccc;\n      background-color: ${switchOnColor};\n      -webkit-transition: .4s;\n      transition: .4s;\n    }\n\n    .three-column-container .slider:before {\n      position: absolute;\n      content: \"\";\n      height: 26px;\n      width: 26px;\n      left: 4px;\n      bottom: 4px;\n      background-color: white;\n      -webkit-transition: .4s;\n      transition: .4s;\n    }\n\n    .three-column-container input:checked + .slider {\n      background-color: #2196F3;\n      background-color: ${switchOffColor};\n    }\n\n    .three-column-container input:focus + .slider {\n      box-shadow: 0 0 1px #2196F3;\n    }\n\n    .three-column-container input:checked + .slider:before {\n      -webkit-transform: translateX(26px);\n      -ms-transform: translateX(26px);\n      transform: translateX(26px);\n    }\n  `;\n\n  document.head.append(globalStyle);\n};\n","import { addGoogleFont } from '../css/add-google-font';\nimport { addGlobalStyles } from '../css/add-global-styles';\n\nlet isGlobalPropertiesSet = false;\n\n/**\n * Function to inject global properties into the document head\n * This mainly concerns:\n * - Global styles\n * - Third-party scripts\n * - Third-party css\n */\nexport const addGlobalProperties = async () => {\n  // --->>\n\n  // Only run this function once\n  if (isGlobalPropertiesSet) return;\n  isGlobalPropertiesSet = true;\n\n  // Inject global styles into head\n  addGlobalStyles();\n\n  // Inject 3rd-Party Fonts\n  addGoogleFont('css2?family=Odibee+Sans');\n  addGoogleFont('icon?family=Material+Icons');\n  addGoogleFont('icon?family=Material+Icons+Outlined');\n\n  // Make sure threeJs v128 is present\n  // At one point I thought about adding threeJs dynamically\n  // if not already present; later, I decided this was too complicated\n  // so if you want to use UMD, you have to add link for three.js v128\n  // @ts-ignore\n  if (window.__THREE__ !== '128') {\n    console.log('This is not supposed to happen!');\n  }\n};\n"],"names":["asciiError","msg","auToMeters","aus","optionKeys","items","count","simpleUuid","loaderDivId","isInit","myprint","Array","_len","_key","arguments","_console","console","log","apply","Date","getInitDate","concat","near","far","AbstractSceneManager","_containerId","this","THREE","document","createElement","sceneEntities","forEach","el","_this","_sceneEntities","push","isHelpersShown","_isHelpersShown","_scene","traverse","child","userData","isHelper","visible","setHelpersVisibility","_canvas","style","width","height","offsetWidth","offsetHeight","_camera","aspect","updateProjectionMatrix","_renderer","setSize","window","removeEventListener","_updateCameraAspect","_stopRendering","_destroyHook","_isRendering","setTimeout","_requestAnimationFrameId","requestAnimationFrame","_render","_update","_fps","_clock","start","stop","_container","getElementById","Error","append","setProperty","containerDiv","loaderDiv","animDiv","id","shorterLength","borderWidthPxls","addLoaderDiv","_proto","prototype","init","_init","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","DPR","_this2","wrap","_context2","prev","next","_isInit","abrupt","setInitDate","_preInitHook","addEventListener","devicePixelRatio","canvas","antialias","alpha","setPixelRatio","sortObjects","shadowMap","enabled","type","outputEncoding","position","copy","_initialViewingVector","up","lookAt","_controls","OrbitControls","domElement","enableDamping","dampingFactor","target","length","Promise","all","map","_ref","_callee","sceneEntity","initiatedSceneEntityGroup","_context","sent","children","constructor","name","_x","then","_","resolve","group","add","_startRendering","_postInitHook","setIsLoaderDivVisible","val","fadeInOutTimeMs","_isLoaderVisible","isVisible","fadeOutTimeMs","setLoaderDivVisibility","setFramesPerSecond","newFps","update","_this3","elapsedTime","updateCamera","render","getTextureFromImageUrl","url","reject","load","texture","encoding","xhr","loaded","total","solarSystemData","SUN","radiusMeters","periodDays","undefined","MERCURY","VENUS","EARTH","MARS","CERES","JUPITER","SATURN","URANUS","NEPTUNE","PLUTO","HAUMEA","MAKEMAKE","ERIS","MOON","defaultOptions","__sbnViewer__isPlanetsLoadedBeforeAnimationBegins","__sbnViewer__isBeltLoadedBeforeAnimationBegins","__sbnViewer__isBeltAbundanceToyModel","__sbnViewer__beltAbundanceMaxObjects","__sbnViewer__beltAbundanceHThreshold","Object","keys","_extends","localStorage","key","includes","removeItem","getItem","JSON","parse","setItem","stringify","err","getAllOptions","optionsFromLocalStorage","parsedVal","AbstractSceneEntity","_isAsyncLoad","_sceneEntityGroup","AbstractToyModel","_AbstractSceneEntity","_toyScale","call","_inheritsLoose","setIsZoomToToyScale","value","_isZoomToToyScale","setToyScale","getScale","_realScale","_setToToyScale","_toyGroup","t","scale","set","setIsLogScale","isLogScale","logTransitionClock","toggleIsLogScale","getLogInterpolationParam","getElapsedTime","v","_updateModelScale","_child$scale","sx","x","sy","y","sz","z","ds","Math","abs","assetsBaseUrl","getAssetsBaseUrl","EOrbitalType","au","Sun","_AbstractToyModel","blending","transparent","sunRadiusMeters","sprite","multiplyScalar","model","helper","color","rotateX","PI","spriteUrl","onTextureLoad","material","needsUpdate","t0","t1","NAME","gltfLoader","gltfUrl","targetRadius","isCenteredOnBoundingBox","isShadowShown","Loader","gltf","object","scene","biggestSphereRadius","pow","geometry","computeBoundingSphere","boundingSphere","radius","s","resizeThreejsObject","_boundingBox$getCente","setFromObject","getCenter","toArray","x2","y2","z2","_object$position$clon","clone","centerOnBoundingBox","castShadow","receiveShadow","enshadowChildren","error","message","getLoggedPosition","oldLengthAus","f","log10","newPosition","planetoidPositions","targetName","coords","MyOrbit","orbitalType","opacity","PLANET","getOrbitLine","ASTEROID","DWARF_PLANET","loadPlanet","getStaticPosition","find","planetoidPosition","toLowerCase","orbitLine","data","toUpperCase","mercuryOrbit","venusOrbit","earthOrbit","marsOrbit","jupiterOrbit","saturnOrbit","uranusOrbit","neptuneOrbit","arielOrbit","callistoOrbit","ceresOrbit","plutoOrbit","haumeaOrbit","comet65POrbit","getLocalOrbitData","pts","coord","pointGeometry","setFromPoints","morphAttributes","positionAttribute","attributes","loggedPositions","i","x0","getX","y0","getY","z0","getZ","loggedPosition","morphTargets","getXyzMeters","tCenturiesSinceJ200","getPosition","_this$getXyzMeters","getTail","tailLength","realBodyPosition","loggedBodyPosition","realTargetTime","loggedTargetTime","realDiffLength","loggedDiffLength","isRealSearch","isLoggedSearch","distanceTo","realDt","loggedDt","dSegmentRadius","geometries","lastRealPosition","lastLoggedPosition","nextRealPosition","nextLoggedPosition","lastSegmentRadius","segment","tLogged","nextSegmentRadius","realSegmentHeight","loggedSegmentHeight","realSegmentGeometry","loggedSegmentGeometry","orientation","makeTranslation","translate","applyMatrix4","realGeometry","BufferGeometryUtils","mergeBufferGeometries","loggedGeometry","planetsWithBumpMaps","planetsAsLoadableObjects","dwarfPlanets","Planet","objUrl","tempMesh","onObjectLoad","obj","imageUrl","bumpUrl","isBumpy","isEarth","pNull","mesh","onTexturesLoad","promises","shininess","_ref3","promisedMapTexture","promisedBumpTexture","promisedEarthCloudTexture","bumpMap","status","earthClouds","bumpScale","clouds","side","depthWrite","canvasResult","contextResult","getContext","imageMap","Image","crossOrigin","onerror","onload","canvasMap","contextMap","drawImage","dataMap","getImageData","imageTrans","canvasTrans","contextTrans","dataTrans","dataResult","createImageData","offset","putImageData","src","allSettled","myOrbit","getPlanetRadiusMeters","getPlanetType","_callee4","_context4","_ref4","_callee3","_context3","loadPlanetAsObject","loadPlanetAsTexturedSphere","getDestinationPosition","_tCenturiesSinceJ200","u","lerp","updateOrbitLine","morphTargetInfluences","_this$getDestinationP","rotateZ","rotateY","MiscHelpers","axesHelper","SimpleLight","_defaultIntensity","intensity","_light","isAmbientLight","setIsOn","isOn","createAsteroidGeometry","size","warpFactor","getAttribute","point","vertices","fromBufferAttribute","join","random","_vertices$key","setXYZ","Asteroid","_this$myOrbit$getXyzM","t2","t3","t4","t5","logpos","PointLight","_radius","dxy","BirdsEye","zInAus","token","setZ","_this$position","getDestinationLookPosition","zoomTarget","setOptions","newOptions","createThreeColumnContainer","threeColumnContainerDiv","classList","firstColumnDiv","secondColumnDiv","thirdColumnDiv","createTitledSwitch","title","onText","offText","cb","_isChecked","_getAllOptions","_createThreeColumnCon","isChecked","innerHTML","switchLabel","switchInput","checked","sliderSpan","_setOptions","createTitledInput","_getAllOptions2","inputField","oninput","numVal","parseInt","alert","getHrDiv","hrDiv","threejsScene","settingsPanelIdX","maxObjectsContainerDivId","thresholdHContainerDivId","isSettingsPanelDisplayed","SceneManager","_AbstractSceneManager","containerId","sun","isToyScale","toyScalables","setIsToyScale","isOrbitsVisible","zoomableOrbitals","setIsOrbitVisible","setIsOrbitsVisible","logScalables","tryToStartZooming","text","TEXT","foundTarget","zoomables","isZoomingPosition","isZoomingAngle","zoomClock","searchTimeElapsed","fraction","v1","v2","camera","zoomTraversalFraction","_getDestinationCamera","cp","relativeDestinationCameraVector","newCameraPosition","getRadius","_zoomTarget$getPositi","X","sinAlpha","asin","applyAxisAngle","lengthenFactor","getDestinationCameraPosition","camPos","destinationLookPosition","destinationLookVector","presentLookVector","getWorldDirection","relativeDestinationLookVector","newLookPosition","angleTo","updateCameraViewingAngle","_getDestinationLookPo","tryToStopZooming","onEnter","div","input","displayMessageDiv","buttonInputs","buttonWrapperDiv","_createDisplayMessage","updateMessageCb","updateDisplayedMessage","e","label","toggleIsToyScale","toggleHelpersVisibility","toggleIsOrbitsVisible","toggleAsteroids","buttonInput","button","onClickCB","buttonDiv","innerText","_createSettingsPanel","settingsPanelDiv","planetLoadingModeSwitchContainerDiv","cometAsteroidLoadingModeSwitchContainerDiv","abundanceRepresentationModeSwitchContainerDiv","maxObjectsContainerDiv","thresholdHContainerDiv","toggleSettingsPanelCb","createSettingsPanel","settingsButton","_sizePxls$color$isOut","sizePxls","isOutlined","iconSpan","settingsButtonDiv","settingsSizePxls","createSettingsButton","birdsEyes","planets","asteroids","registerSceneEntities","maxDistance","setIsScenePaused","isScenePaused","fontsAdded","addGoogleFont","fontName","newLink","rel","href","head","isGlobalStylesSet","addGlobalStyles","globalStyle","isGlobalPropertiesSet","addGlobalProperties","__THREE__","initDate","date","destroy"],"mappings":"o1OAIgBA,EAAWC,GAEzB,quBAkBEA,gCCnBYC,EAAWC,GACzB,OAAO,aAAeA,ECNxB,ICWQC,EAGAC,EDdJC,EAAQ,EAECC,EAAa,WAExB,MAAO,8BADPD,GEDWE,EAAc,iBAAmBD,IAI1CE,GAAS,ECDAC,EAAU,wCAAIT,MAAUU,MAAAC,GAAAC,IAAAA,EAAAD,EAAAC,IAAVZ,EAAUY,GAAAC,UAAAD,IACnCE,EAAAC,SAAQC,IAAGC,MAAAH,GAAC,SAAU,IAAII,MAAUC,KAAe,SAAOC,OAAKpB,KCU3DqB,EAAOpB,EAAW,MAClBqB,EAAMrB,EAAW,KAaDsB,aAyBpB,SAAAA,EAAsBC,cAKpB,GALoBC,kBAAAD,EApBZC,YAAS,IAAIC,QAEbD,aAAUE,SAASC,cAAc,UAEjCH,YAAS,IAAIC,SAAY,GACzBD,2BAAwB,IAAIC,UAC5BD,oBAAgB,EAChBA,mBAAe,EACfA,sBAAkB,EAClBA,cAAU,EAEVA,uBAAmB,EACnBA,UAAO,GACPA,aAAU,IAAIC,oBAjCd,GADD,EAkCgDL,EAAMC,GACrDG,oBAAiC,GACjCA,kBAA2B,aAC3BA,mBAA4B,aAC5BA,kBAA2B,aAC3BA,kBAA2B,aAgH3BA,2BAAwB,SAACI,GACjCA,EAAcC,SAAQ,SAAAC,GAAE,OAAIC,EAAKC,eAAeC,KAAKH,OAQhDN,0BAAuB,SAACU,GAC7BH,EAAKI,kBAAoBD,EACzBH,EAAKK,OAAOC,UAAS,SAAAC,GACnB,OAAOA,EAAMC,SAASC,WAAaF,EAAMG,QAAUV,EAAKI,qBAIrDX,6BAA0B,WAC/BO,EAAKI,iBAAmBJ,EAAKI,gBAC7BJ,EAAKW,qBAAqBX,EAAKI,kBAazBX,yBAAsB,WAG5BO,EAAKY,QAAQC,MAAMC,MAAQ,OAC3Bd,EAAKY,QAAQC,MAAME,OAAS,OAC5B,IAAMD,EAAQd,EAAKY,QAAQI,aAAe,EACpCD,EAASf,EAAKY,QAAQK,cAAgB,EAC5CjB,EAAKkB,QAAQC,OAASL,EAAQC,EAC9Bf,EAAKkB,QAAQE,yBACbpB,EAAKqB,UAAWC,QAAQR,EAAOC,IAG1BtB,aAAsB,WAC3B8B,OAAOC,oBAAoB,SAAUxB,EAAKyB,qBAC1CzB,EAAK0B,iBACL1B,EAAK2B,gBAoBClC,aAAU,WACXO,EAAK4B,cACVC,YAAW,WACT7B,EAAK8B,yBAA2BC,sBAAsB/B,EAAKgC,SAC3DhC,EAAKiC,YACJ,IAAOjC,EAAKkC,OAGTzC,qBAAkB,WACxBhB,EAAQ,yBACRuB,EAAK4B,cAAe,EACpB5B,EAAKmC,OAAOC,QACZpC,EAAKgC,WAGCvC,oBAAiB,WACvBhB,EAAQ,yBACRuB,EAAK4B,cAAe,EACpB5B,EAAKmC,OAAOE,QA9LZ5C,KAAK6C,WAAa3C,SAAS4C,eAAe9C,KAAKD,eAC1CC,KAAK6C,WACR,MAAM,IAAIE,MAAM,+BAAiC/C,KAAKD,cAGxDC,KAAKmB,QAAQC,MAAMC,MAAQ,OAC3BrB,KAAKmB,QAAQC,MAAME,OAAS,OAC5BtB,KAAK6C,WAAWG,OAAOhD,KAAKmB,SAC5BnB,KAAK6C,WAAWzB,MAAM6B,YAAY,WAAY,YAC9CjD,KAAK6C,WAAWzB,MAAM6B,YAAY,cAAe,0BACjDjD,KAAK6C,WAAWzB,MAAM6B,YAAY,mBAAoB,SFvD9B,SAACC,GAI3B,IAAInE,EAAJ,CACAA,GAAS,EAGT,IAAMoE,EAAYjD,SAASC,cAAc,OACnCiD,EAAUlD,SAASC,cAAc,OACvC+C,EAAaF,OAAOG,GACpBA,EAAUH,OAAOI,GAEjBD,EAAUE,GAAKvE,EACfqE,EAAU/B,MAAM6B,YAAY,WAAY,YACxCE,EAAU/B,MAAM6B,YAAY,MAAO,OACnCE,EAAU/B,MAAM6B,YAAY,OAAQ,OACpCE,EAAU/B,MAAM6B,YAAY,SAAU,OACtCE,EAAU/B,MAAM6B,YAAY,QAAS,OACrCE,EAAU/B,MAAM6B,YAAY,UAAW,QACvCE,EAAU/B,MAAM6B,YAAY,cAAe,UAC3CE,EAAU/B,MAAM6B,YAAY,kBAAmB,UAC/CE,EAAU/B,MAAM6B,YAAY,iBAAkB,QAE9C,IAAM5B,EAAQ8B,EAAU5B,YAClBD,EAAS6B,EAAU3B,aACnB8B,EAAgBjC,EAAQC,EAASD,EAAQC,EAE/C8B,EAAQhC,MAAM6B,YAAY,QAAyB,IAAhBK,EAAuB,MAC1DF,EAAQhC,MAAM6B,YAAY,SAA0B,IAAhBK,EAAuB,MAC3DF,EAAQhC,MAAM6B,YAAY,SAAaM,qBACvCH,EAAQhC,MAAM6B,YAAY,aAAiBM,qBAC3CH,EAAQhC,MAAM6B,YAAY,gBAAiB,SAC3CG,EAAQhC,MAAM6B,YACZ,2EEsBAO,CAAaxD,KAAK6C,YACnB,IAAAY,EAAA3D,EAAA4D,UA8JA,OA9JAD,EAEYE,gBAAI,IAAAC,EAAAC,EAAAC,IAAAC,MAAV,SAAAC,IAAA,IAAAC,EAAAC,OAAA,OAAAJ,IAAAK,eAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAA,IAICtE,KAAKuE,SAAOH,EAAAE,OAAA,MAAA,OAAAF,EAAAI,iBAAA,OAsClB,GArCAxE,KAAKuE,SAAU,EAGfE,GAAY,IAAIhF,MAGhBO,KAAK0E,eAGL5C,OAAO6C,iBAAiB,SAAU3E,KAAKgC,qBAGjCiC,EAAcnC,OAAO8C,iBAAmB9C,OAAO8C,iBAAmB,EACxE5E,KAAK4B,UAAY,IAAI3B,gBAAoB,CACvC4E,OAAQ7E,KAAKmB,QACb2D,WAAW,EACXC,OAAO,IAET/E,KAAK4B,UAAUoD,cAAcf,GAC7BjE,KAAK4B,UAAUqD,aAAc,EAC7BjF,KAAK4B,UAAUsD,UAAUC,SAAU,EACnCnF,KAAK4B,UAAUsD,UAAUE,KAAOnF,mBAChCD,KAAK4B,UAAUyD,eAAiBpF,gBAGhCD,KAAKyB,QAAQ6D,SAASC,KAAKvF,KAAKwF,uBAChCxF,KAAKyB,QAAQgE,GAAK,IAAIxF,UAAc,EAAG,EAAG,GAC1CD,KAAKyB,QAAQiE,OAAO,EAAG,EAAG,GAK1B1F,KAAK2F,UAAY,IAAIC,gBAAc5F,KAAKyB,QAASzB,KAAK4B,UAAUiE,YAChE7F,KAAK2F,UAAUG,eAAgB,EAC/B9F,KAAK2F,UAAUI,cAAgB,IAC/B/F,KAAK2F,UAAUK,OAAS,IAAI/F,UAGvBD,KAAKQ,eAAeyF,QAAM7B,EAAAE,QAAA,MAAA,MACvB,IAAIvB,MAAMzE,EAAW,gCAA+B,QAAA,OAAA8F,EAAAE,QAEnB4B,QAAQC,IAC/CnG,KAAKQ,eAAe4F,eAAG,IAAAC,EAAAxC,EAAAC,IAAAC,MAAC,SAAAuC,EAAMC,GAAW,IAAAC,EAAA,OAAA1C,IAAAK,eAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,OAAA,OAAAmC,EAAAnC,OACciC,EAAY5C,OAAM,OAAxC,IAAzB6C,EAAyBC,EAAAC,OAG5BF,EAA0BG,SAASV,QAAMQ,EAAAnC,OAAA,MAAA,MAEpC,IAAIvB,MACRzE,gIAEoBiI,EAAYK,YAAYC,oLAI7C,OAAA,OAAAJ,EAAAjC,gBACIgC,GAAyB,OAAA,UAAA,OAAAC,EAAA7D,UAAA0D,OACjC,gBAAAQ,GAAA,OAAAT,EAAA7G,WAAAJ,iBAEA2H,MACC,SAAAC,GAAC,OACC,IAAId,SAAuB,SAAAe,GAAO,OAChC7E,YAAW,WAAA,OAAM6E,EAAQD,KAAI,WAGlCD,MAAK,SAAAC,GAAC,OAAIA,KAAE,QAxBiB5C,EAAAsC,KAyBLrG,SAAQ,SAAA6G,GAAK,OAAIhD,EAAKtD,OAAOuG,IAAID,MAG5DlH,KAAKkB,sBAAqB,GAC1BlB,KAAKgC,sBAGLhC,KAAKoH,kBAGLpH,KAAKqH,gBAGLrH,KAAKsH,uBAAsB,GAK3BtI,EAAQ,8BAA8B,QAAA,UAAA,OAAAoF,EAAAxB,UAAAoB,YACvC,OAAA,WAAA,OAAAJ,EAAApE,WAAAJ,eAAAqE,EAuBM6D,sBAAA,SAAsBC,EAAcC,YAAAA,IAAAA,EAAkB,KAC3DxH,KAAKyH,iBAAmBF,ECzLU,SACpCG,EACAC,YAAAA,IAAAA,EAAgB,KAIhB,IAAMxE,EAAYjD,SAAS4C,eAAehE,SAC1CqE,GAAAA,EAAW/B,MAAM6B,YACf,wBACW0E,0BAKbxE,GAAAA,EAAW/B,MAAM6B,YAAY,cAAcyE,EAAY,EAAI,ID4KzDE,CAAuB5H,KAAKyH,iBAAkBD,IAC/C/D,EAEMoE,mBAAA,SAAmBC,GACpBA,GAAU,GAAKA,EAAS,MAC5B9H,KAAKyC,KAAOqF,IACbrE,EAoBOjB,QAAA,sBAWN,GARAxC,KAAKQ,eAAeH,SAAQ,SAAAC,GAAE,OAC5BA,EAAGyH,OAAOC,EAAKvG,QAASuG,EAAKtF,OAAOuF,gBAItCjI,KAAKkI,gBAGAlI,KAAKyB,UAAYzB,KAAK4B,UAAW,MAAM,IAAImB,MAAM,cAChD/C,KAAKqC,0BACTrC,KAAK4B,UAAUuG,OAAOnI,KAAKY,OAAQZ,KAAKyB,UAE3C3B,KE/NUsI,EAAyB,SACpCC,EACAxB,GAEA,OAAO,IAAIX,SAAQ,SAACe,EAASqB,IAC3B,IAAIrI,iBAAsBsI,KACxBF,GACA,SAAAG,GACEA,EAAQC,SAAWxI,gBACnBmC,YAAW,WAAA,OAAM6E,EAAQuB,KAXV,MAajB,SAAAE,GAAG,OAAIpJ,QAAQC,IAAOsH,MAAS6B,EAAIC,OAASD,EAAIE,MAAS,YACzD,WACEtJ,QAAQC,IAAI,mBAAoB8I,GAChCC,EAAO,IAAIvF,MAAM,mBAAqBsF,WCpBjCQ,EAAkB,CAC7BC,IAAK,CACHC,aAAc,SACdC,gBAAYC,GAEdC,QAAS,CACPH,aAAc,QACdC,WAAY,SAEdG,MAAO,CACLJ,aAAc,QACdC,WAAY,SAEdI,MAAO,CACLL,aAAc,OACdC,WAAY,SAEdK,KAAM,CACJN,aAAc,QACdC,WAAY,SAEdM,MAAO,CACLP,aAAc,KACdC,WAAY,eAEdO,QAAS,CACPR,aAAc,QACdC,WAAY,SAEdQ,OAAQ,CACNT,aAAc,QACdC,WAAY,UAEdS,OAAQ,CACNV,aAAc,QACdC,WAAY,SAEdU,QAAS,CACPX,aAAc,QACdC,WAAY,OAEdW,MAAO,CACLZ,aAAc,QACdC,WAAY,OAEdY,OAAQ,CACNb,aAAc,KACdC,WAAY,QAEda,SAAU,CACRd,aAAc,KACdC,WAAY,QAEdc,KAAM,CACJf,aAAc,OACdC,WAAY,QAGde,KAAM,CACJhB,aAAc,KACdC,WAAY,OCxCHgB,EAA2B,CACtCC,mDAAmD,EACnDC,gDAAgD,EAChDC,sCAAsC,EAEtCC,qCAAsC,IACtCC,sCAAuC,IPfjC3L,EAAa4L,OAAOC,KAAKP,GAGzBrL,EAAK6L,KAAQC,cAEnBH,OAAOC,KAAK5L,GAAO0B,SAAQ,SAAAqK,GACpBhM,EAAWiM,SAASD,IAAaD,aAAaG,WAAWF,MAIhEhM,EAAW2B,SAAQ,SAAAqK,GACjB,IAAMnD,EAAMkD,aAAaI,QAAQH,GACjC,GAAKnD,EAMH,WACoBuD,KAAKC,MAAMxD,WAGpByC,EAAgBU,IAEvBD,aAAaO,QACXN,EACAI,KAAKG,UAAUjB,EAAgBU,KAGnC,MAAOQ,GAEP,YADA5L,QAAQC,IAAI,6BAjBdkL,aAAaO,QACXN,EACAI,KAAKG,UAAUjB,EAAgBU,QQXhC,IAAMS,EAAgB,WAI3B,IAAMC,EAA6C,GAWnD,OAVAd,OAAOC,KAAKP,GAAgB3J,SAAQ,SAAAqK,GAClC,IAAMnD,EAAMkD,aAAaI,QAAQH,GACjC,GAAKnD,EACL,IACE,IAAM8D,EAAYP,KAAKC,MAAMxD,GAC7B6D,EAAyBV,GAAiCW,EAC1D,MAAOH,GACP,WAGJV,KAAYR,EAAmBoB,ICvBXE,EAAtB,SAAAA,eAKYtL,kBAAe,WAAA,OAAMsL,EAAoBC,cAEzCvL,uBAAiC,IAAIC,QACxCD,yBAAsB,WAAA,OAAMO,EAAKiL,oBALzBF,eAAeH,IAC3BlB,kDCJL,IAMsBwB,WAAiBC,GAWrC,SAAAD,EAAsBE,SAF2B,OAG/CpL,EAAAmL,EAAAE,4BADoBD,EAPZpL,YAA8B,GAC9BA,aAAa,EACbA,qBAAoB,EAEpBA,cAAa,EACbA,qBAAqB,IAAIN,QAAcM,EATZsL,EAAAJ,EAAAC,GAapC,IAAAjI,EAAAgI,EAAA/H,UAwEA,OAxEAD,EAEMqI,oBAAA,SAAoBC,GACzB/L,KAAKgM,kBAAoBD,GAC1BtI,EAEMwI,YAAA,SAAY1E,KAElB9D,EAEMyI,SAAA,WACL,OAAOlM,KAAKgM,kBACRhM,KAAK2L,UACL3L,KAAKmM,YACV1I,EAES2I,eAAA,sBACRpM,KAAKgM,mBAAoB,EACzBhM,KAAKqM,UAAUhM,SAAQ,SAAAS,GACrB,IAAMwL,EAAIpI,EAAKyH,UACf7K,EAAMyL,MAAMC,IAAIF,EAAGA,EAAGA,OAEzB7I,EAEMgJ,cAAA,SAAclF,GAEnBvH,KAAK0M,WAAanF,EAElBvH,KAAK2M,mBAAqB,IAAI1M,SAAY,GAC1CD,KAAK2M,mBAAmBhK,QAIxB3C,KAAKiM,YAAYjM,KAAK0M,WADF,IAC6B,MAClDjJ,EAEMmJ,iBAAA,WACL5M,KAAKyM,eAAezM,KAAK0M,aAC1BjJ,EAEDoJ,yBAAA,WACE,IAAMP,EACJtM,KAAK2M,mBAAmBG,iBA7DG,EA+DvBC,EAAIT,EAAI,EAAIA,EAAI,EACtB,OAAOtM,KAAK0M,WAAaK,EAAI,EAAIA,GAClCtJ,EAESuJ,kBAAA,sBACRhN,KAAKqM,UAAUhM,SAAQ,SAAAS,GAErB,IAAMwL,EAAItE,EAAKgE,kBACXhE,EAAK2D,UACL3D,EAAKmE,WACTc,EAAgCnM,EAAMyL,MAA3BW,EAAED,EAALE,EAAUC,EAAEH,EAALI,EAAUC,EAAEL,EAALM,EACtB,GAAIL,IAAOZ,EAAX,CAGA,IAAMkB,EAAKxF,EAAK2D,UAAY,GACxBuB,EAAKZ,GAEPxL,EAAMyL,MAAMC,IAAIU,EAAKM,EAAIJ,EAAKI,EAAIF,EAAKE,GAErCN,EAAKZ,GAEPxL,EAAMyL,MAAMC,IAAIU,EAAKM,EAAIJ,EAAKI,EAAIF,EAAKE,GAErCC,KAAKC,IAAIR,EAAKZ,GAAKkB,GAErB1M,EAAMyL,MAAMC,IAAIF,EAAGA,EAAGA,QAG3Bb,GArF4CH,GCWlCqC,EAAwBC,IAErC,SAASA,IACP,yDAoBK,IC/CKC,ED+CCC,EAAKtP,EAAW,GE3BhBuP,WAAIC,GAgBf,SAAAD,UAgB8B,OAf5BxN,EAAAyN,EAAApC,UApBmB,gBAME,MACNrL,WAAW,IAAIN,UAAc,EAAG,EAAG,GACnCM,kBAAkBsI,EAAgBC,IAAIC,aAC/CxI,QAAQ,IAAIN,QAEZM,SAAS,IAAIN,SACnB,IAAIA,iBAAqB,CACvBgO,SAAUhO,mBACViO,aAAa,EACbjN,SAAS,KAuBbV,YAAY,WAAA,OAAMA,EAAK4N,iBAEvB5N,cAAc,WAAA,OAAMA,EAAK+E,UAjBvB/E,EAAK6N,OAAO7B,MAAM8B,eAtBE,GAsBa9N,EAAK4N,iBACtC5N,EAAK+N,MAAMnH,IAAI5G,EAAK6N,QAGpB7N,EAAKgO,OAAS,IAAItO,eAChB,IAAIA,gBACF,IAAIA,iBAAqBM,EAAK4N,gBAAiB,KAEjD,IAAIlO,oBAAwB,CAAEuO,MAAO,IAAIvO,QAAY,WAEvDM,EAAKgO,OAAOxN,SAASC,UAAW,EAChCT,EAAKgO,OAAOE,QAAQhB,KAAKiB,GAAK,GAC9BnO,EAAK+N,MAAMnH,IAAI5G,EAAKgO,QAAQhO,EAhCfsL,EAAAkC,EAAAC,GAiCd,IAAAvK,EAAAsK,EAAArK,UAmCA,OAnCAD,EAMKE,gBAAI,IAAAC,EAAAC,EAAAC,IAAAC,MAAV,SAAAC,IAAA,IAAAE,OAAA,OAAAJ,IAAAK,eAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAA,OAAAF,EAAAI,gBACS,IAAI0B,mBAAO,IAAAG,EAAAxC,EAAAC,IAAAC,MAAc,SAAAuC,EAAMW,GAAO,IAAA0H,EAAAC,EAAA,OAAA9K,IAAAK,eAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,OAQ1C,GALKqK,EAAehB,+BACfiB,EAAgB,SAACpG,GACrBtE,EAAKkK,OAAOS,SAASzI,IAAMoC,EAC3BtE,EAAKkK,OAAOS,SAASC,aAAc,EACnC5K,EAAKkK,OAAOS,SAAS5N,SAAU,IAG7BiD,EAAKqH,gBAAc9E,EAAAnC,OAAA,MACrB8D,EAAuBuG,EAAW,oBAC/B5H,KAAK6H,UACC,SAAA5H,GAAC,OAAI,QAAMP,EAAAnC,QAAA,MAAA,OAEP,OAFOmC,EAAAsI,GAEpBH,EAAanI,EAAAnC,OAAO8D,EAAuBuG,UAAiB,SAAA3H,GAAC,OAAI,QAAK,OAAAP,EAAAuI,GAAAvI,EAAAC,MAAA,EAAAD,EAAAsI,IAAAtI,EAAAuI,IAAA,QAGxE9K,EAAKmI,UAAU5L,KAAKyD,EAAKoK,OACzBpK,EAAKsH,kBAAkB3E,KAAO3C,EAAK+K,KACnC/K,EAAKsH,kBAAkBrE,IAAIjD,EAAKoK,OAChCtP,EAAQ,gBACRiI,EAAQ/C,EAAKsH,mBAAmB,QAAA,UAAA,OAAA/E,EAAA7D,UAAA0D,OACjC,gBAAAQ,GAAA,OAAAT,EAAA7G,WAAAJ,iBAAC,OAAA,UAAA,OAAAgF,EAAAxB,UAAAoB,OACH,OAAA,WAAA,OAAAJ,EAAApE,WAAAJ,eAAAqE,EAEDsE,OAAA,WACE/H,KAAKgN,qBACNe,GApEsBtC,YCZTyD,EACdC,EACAC,EACAC,EACAC,GAIA,OAAO,IAAIpJ,SAAqB,SAACe,EAASqB,IACxC,IAAIiH,cAAShH,KACX4G,GACA,SAAAK,GACE,IAAMC,EAASD,EAAKE,MACdN,YCdZK,EACAL,GAIA,IAAIO,EAA8BlC,KAAKmC,IAAI,IAAK,IAChDH,EAAO5O,UAAS,SAAAC,GACVA,aAAiBb,SACnBa,EAAM+O,SAASC,wBAEXhP,EAAM+O,UACN/O,EAAM+O,SAASE,gBACjBjP,EAAM+O,SAASE,eAAeC,OAASL,IAEvCA,EAAsB7O,EAAM+O,SAASE,eAAeC,YAI1D,IAAMC,EAAIb,EAAeO,EACzBF,EAAOlD,MAAMC,IAAIyD,EAAGA,EAAGA,GDLGC,CAAoBT,EAAQL,GAC1CC,YEVsBI,GAIlC,IACAU,GADoB,IAAIlQ,QAAamQ,cAAcX,GAClBY,UAAU,IAAIpQ,WAAiBqQ,UAAzDC,EAAEJ,KAAEK,EAAEL,KAAEM,EAAEN,KAGjBO,EAAqBjB,EAAOnK,SAASqL,QAAQL,UAC7Cb,EAAOnK,SAASkH,IADPkE,KACgBH,EADZG,KACqBF,EADjBE,KAC0BD,GFCNG,CAAoBnB,GAC7CH,YGpBmBG,GAC/BA,EAAO5O,UAAS,SAAAC,GACK,SAAfA,EAAMsE,OACRtE,EAAM+P,YAAa,EACnB/P,EAAMgQ,eAAgB,MHgBCC,CAAiBtB,GACtCrN,YAAW,WAAA,OAAM6E,EAAQwI,KTpBV,MSsBjB,SAAA/G,GAAG,OAAI,KACP,SAAAsI,GACE1R,QAAQC,IAAI,0BAA2ByR,EAAMC,SAC7C3I,mBIvBQ4I,EAAkB5L,GAIhC,IAAM6L,EAAe7L,EAASW,SAAW6H,EAOnCsD,GAJe3D,KAAK4D,MAAMF,GAAgB,GAIvBA,EAGnBG,EAAchM,EAASqL,QAE7B,OADAW,EAAYjD,eAAe+C,GACpBE,GNtBT,SAAYzD,GACVA,kBACAA,8BACAA,YACAA,sBAJF,CAAYA,IAAAA,WOCC0D,EAAqB,CAChC,CACEC,WAAc,MACd3K,KAAQ,MACR4K,OAAU,CACR,CACE,oBACC,kBACD,qBAIN,CACED,WAAc,UACd3K,KAAQ,UACR4K,OAAU,CACR,CACE,mBACC,mBACA,qBAIP,CACED,WAAc,QACd3K,KAAQ,QACR4K,OAAU,CACR,EACG,mBACA,iBACD,qBAIN,CACED,WAAc,QACd3K,KAAQ,QACR4K,OAAU,CACR,CACE,EACA,EACA,KAIN,CACED,WAAc,OACd3K,KAAQ,OACR4K,OAAU,CACR,EACG,mBACA,kBACD,qBAIN,CACED,WAAc,OACd3K,KAAQ,OACR4K,OAAU,CACR,CACE,mBACC,mBACA,qBAIP,CACED,WAAc,SACd3K,KAAQ,SACR4K,OAAU,CACR,CACE,mBACC,oBACA,qBAIP,CACED,WAAc,SACd3K,KAAQ,SACR4K,OAAU,CACR,CACE,oBACC,mBACA,qBAIP,CACED,WAAc,UACd3K,KAAQ,UACR4K,OAAU,CACR,CACE,iBACA,mBACC,qBAIP,CACED,WAAc,KACd3K,KAAQ,KACR4K,OAAU,CACR,CACE,kBACA,mBACC,qBAIP,CACED,WAAc,SACd3K,KAAQ,SACR4K,OAAU,CACR,CACE,kBACA,mBACC,qBAIP,CACED,WAAc,WACd3K,KAAQ,WACR4K,OAAU,CACR,CACE,kBACA,oBACC,sBAIP,CACED,WAAc,WACd3K,KAAQ,WACR4K,OAAU,CACR,CACE,kBACA,mBACC,sBAIP,CACED,WAAc,SACd3K,KAAQ,SACR4K,OAAU,CACR,CACE,kBACA,kBACC,qBAIP,CACED,WAAc,QACd3K,KAAQ,QACR4K,OAAU,CACR,CACE,iBACA,mBACC,qBAIP,CACED,WAAc,YACd3K,KAAQ,YACR4K,OAAU,CACR,CACE,kBACA,mBACC,qBAIP,CACED,WAAc,SACd3K,KAAQ,SACR4K,OAAU,CACR,CACE,kBACA,kBACC,qBAIP,CACED,WAAc,QACd3K,KAAQ,QACR4K,OAAU,CACR,CACE,kBACA,mBACC,qBAIP,CACED,WAAc,OACd3K,KAAQ,OACR4K,OAAU,CACR,CACE,kBACA,kBACC,qBAIP,CACED,WAAc,QACd3K,KAAQ,QACR4K,OAAU,CACR,CACE,kBACA,mBACC,qBAIP,CACED,WAAc,WACd3K,KAAQ,WACR4K,OAAU,CACR,CACE,kBACA,mBACC,qBAIP,CACED,WAAc,UACd3K,KAAQ,UACR4K,OAAU,CACR,CACE,kBACA,mBACC,sBAIP,CACED,WAAc,SACd3K,KAAQ,SACR4K,OAAU,CACR,CACE,kBACA,mBACC,qBAIP,CACED,WAAc,SACd3K,KAAQ,SACR4K,OAAU,CACR,CACE,oBACC,mBACA,qBAIP,CACED,WAAc,UACd3K,KAAQ,UACR4K,OAAU,CACR,CACE,mBACC,mBACA,sBAIP,CACED,WAAc,QACd3K,KAAQ,QACR4K,OAAU,CACR,CACE,kBACC,oBACA,qBAIP,CACED,WAAc,UACd3K,KAAQ,UACR4K,OAAU,CACR,CACE,oBACC,mBACA,qBAIP,CACED,WAAc,UACd3K,KAAQ,UACR4K,OAAU,CACR,CACE,mBACC,mBACA,qBAIP,CACED,WAAc,SACd3K,KAAQ,SACR4K,OAAU,CACR,CACE,mBACC,kBACA,qBAIP,CACED,WAAc,UACd3K,KAAQ,UACR4K,OAAU,CACR,CACE,oBACC,kBACD,qBAIN,CACED,WAAc,SACd3K,KAAQ,SACR4K,OAAU,CACR,CACE,oBACC,kBACD,qBAIN,CACED,WAAc,SACd3K,KAAQ,SACR4K,OAAU,CACR,CACE,kBACC,mBACD,qBAIN,CACED,WAAc,QACd3K,KAAQ,QACR4K,OAAU,CACR,EACG,mBACA,kBACD,qBAIN,CACED,WAAc,SACd3K,KAAQ,SACR4K,OAAU,CACR,EACG,mBACA,kBACD,qBAIN,CACED,WAAc,MACd3K,KAAQ,MACR4K,OAAU,CACR,EACG,mBACA,kBACD,oBAIN,CACED,WAAc,QACd3K,KAAQ,QACR4K,OAAU,CACR,EACG,mBACA,kBACD,oBAIN,CACED,WAAc,WACd3K,KAAQ,WACR4K,OAAU,CACR,EACG,mBACA,kBACD,oBAIN,CACED,WAAc,OACd3K,KAAQ,OACR4K,OAAU,CACR,EACG,mBACA,kBACD,qBAIN,CACED,WAAc,QACd3K,KAAQ,QACR4K,OAAU,CACR,EACG,mBACA,mBACD,oBAIN,CACED,WAAc,QACd3K,KAAQ,QACR4K,OAAU,CACR,EACG,oBACA,mBACD,qBAIN,CACED,WAAc,SACd3K,KAAQ,SACR4K,OAAU,CACR,EACG,mBACA,kBACD,yw1qDCnbF3D,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"}