#! /bin/bash

####################################################################
# This script collects together all variables that are only known
# at build time and inject them into `environment*.ts` source code.
####################################################################

source .env

# Assign default value to $BASE_HREF if not already set
if [[ -z $BASE_HREF ]]; then
  echo -e """
    >>> \033[31m BASE_HREF not set. Using default value '/'
  \033[0m """
  BASE_HREF='/'
fi

# Assign default value to $DATA_API if not already set
if [[ -z $DATA_API ]]; then
  echo -e """
    >>> \033[31m DATA_API not set. Using default value 'catch'
  \033[0m """
  DATA_API=catch
fi

# Compute and export variable $invoke_url for lambda emailer
# source _invoke_url_export

########################################
# Overwrite environment.ts file:
########################################
cat >src/client/environments/environment.ts <<EOL
export interface IEnvironment {
  production: boolean;
  dataApi:  'mock' | 'catch' | 'catchstage' | 'catchsandbox' | 'musforti';
  hmr: boolean;
  emailerEndpoint: string;
  baseHref: string;
  recaptchaSiteKey: string;
}

export const environment: IEnvironment = {
  production: false,
  dataApi: '${DATA_API}',
  hmr: false,
  emailerEndpoint: '${invoke_url}',
  baseHref: '${BASE_HREF}',
  recaptchaSiteKey: '${RECAPTCHA_SITE}'
};
EOL

########################################
# Overwrite environment.hmr.ts file:
########################################
cat >src/client/environments/environment.hmr.ts <<EOL
export const environment = {
  production: false,
  dataApi: '${DATA_API}',
  hmr: true,
  emailerEndpoint: '${invoke_url}',
  baseHref: '${BASE_HREF}',
  recaptchaSiteKey: '${RECAPTCHA_SITE}'
};
EOL

########################################
# Overwrite environment.prod.ts file:
########################################
cat >src/client/environments/environment.prod.ts <<EOL
export const environment = {
  production: true,
  dataApi: '${DATA_API}',
  hmr: false,
  emailerEndpoint: '${invoke_url}',
  baseHref: '${BASE_HREF}',
  recaptchaSiteKey: '${RECAPTCHA_SITE}'
};
EOL
